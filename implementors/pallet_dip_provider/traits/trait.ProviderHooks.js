(function() {var implementors = {
"pallet_deposit_storage":[["impl&lt;Runtime, DepositsNamespace, FixedDepositAmount, DepositKey&gt; ProviderHooks&lt;Runtime&gt; for <a class=\"struct\" href=\"pallet_deposit_storage/struct.FixedDepositCollectorViaDepositsPallet.html\" title=\"struct pallet_deposit_storage::FixedDepositCollectorViaDepositsPallet\">FixedDepositCollectorViaDepositsPallet</a>&lt;DepositsNamespace, FixedDepositAmount, DepositKey&gt;<span class=\"where fmt-newline\">where\n    Runtime: Config + <a class=\"trait\" href=\"pallet_deposit_storage/pallet/trait.Config.html\" title=\"trait pallet_deposit_storage::pallet::Config\">Config</a>,\n    DepositsNamespace: Get&lt;Runtime::<a class=\"associatedtype\" href=\"pallet_deposit_storage/pallet/trait.Config.html#associatedtype.Namespace\" title=\"type pallet_deposit_storage::pallet::Config::Namespace\">Namespace</a>&gt;,\n    FixedDepositAmount: Get&lt;<a class=\"type\" href=\"pallet_deposit_storage/pallet/type.BalanceOf.html\" title=\"type pallet_deposit_storage::pallet::BalanceOf\">BalanceOf</a>&lt;Runtime&gt;&gt;,\n    DepositKey: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.74.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(Runtime::Identifier, Runtime::AccountId, IdentityCommitmentVersion)&gt; + Encode,</span>"]],
"pallet_dip_provider":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()