// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Send DOTs from basilisk 2 Peregrine > receiver Peregrine::messageQueue::[ProcessingFailed] 1`] = `
[
  {
    "data": {
      "error": "Unsupported",
      "id": "(hash)",
      "origin": "Parent",
    },
    "method": "ProcessingFailed",
    "section": "messageQueue",
  },
]
`;

exports[`Send DOTs from basilisk 2 Peregrine > relayer Rococo::balances::[Burned] 1`] = `
[
  {
    "data": {
      "amount": 50000000000000,
      "who": "5Ec4AhNugFBakYoh6kD3mgCkUDhy4vVm5o78KDtG42yrXKwS",
    },
    "method": "Burned",
    "section": "balances",
  },
]
`;

exports[`Send DOTs from basilisk 2 Peregrine > relayer Rococo::balances::[Minted] 1`] = `
[
  {
    "data": {
      "amount": "(rounded 50000000000000)",
      "who": "5Ec4AhNtskxrg56TpEJ8zweU5h4JVUmGgxDqnoE1grqycu6q",
    },
    "method": "Minted",
    "section": "balances",
  },
  {
    "data": {
      "amount": "(rounded 130000000)",
      "who": "5EYCAe5ijiYfyeZ2JJCGq56LmPyNRAKzpG4QkoQkkQNB5e6Z",
    },
    "method": "Minted",
    "section": "balances",
  },
]
`;

exports[`Send DOTs from basilisk 2 Peregrine > relayer Rococo::messageQueue::[Processed] 1`] = `
[
  {
    "data": {
      "id": "(hash)",
      "origin": {
        "Ump": {
          "Para": "(rounded 2100)",
        },
      },
      "success": true,
      "weightUsed": {
        "proofSize": 7200,
        "refTime": "(rounded 630000000)",
      },
    },
    "method": "Processed",
    "section": "messageQueue",
  },
]
`;

exports[`Send DOTs from basilisk 2 Peregrine > sender basilisk::parachainSystem::[UpwardMessageSent] 1`] = `
[
  {
    "data": {
      "messageHash": "(hash)",
    },
    "method": "UpwardMessageSent",
    "section": "parachainSystem",
  },
]
`;

exports[`Send DOTs from basilisk 2 Peregrine > sender basilisk::tokens::[Withdraw] DOTs 1`] = `
[
  {
    "data": {
      "amount": 50000000000000,
      "currencyId": 5,
      "who": "bXmKs2MD6WHcgPEjjDNfgAU7nTzxz3zm9DF6xHajqETdpYBP3",
    },
    "method": "Withdrawn",
    "section": "tokens",
  },
]
`;

exports[`Send DOTs from basilisk 2 Peregrine > sender basilisk::xTokens::[TransferredAssets] DOTs 1`] = `
[
  {
    "data": {
      "assets": [
        {
          "fun": {
            "Fungible": 50000000000000,
          },
          "id": {
            "interior": "Here",
            "parents": 1,
          },
        },
      ],
      "dest": {
        "interior": {
          "X2": [
            {
              "Parachain": "(rounded 2100)",
            },
            {
              "AccountId32": {
                "id": "(hash)",
                "network": null,
              },
            },
          ],
        },
        "parents": 1,
      },
      "fee": {
        "fun": {
          "Fungible": 50000000000000,
        },
        "id": {
          "interior": "Here",
          "parents": 1,
        },
      },
      "sender": "bXmKs2MD6WHcgPEjjDNfgAU7nTzxz3zm9DF6xHajqETdpYBP3",
    },
    "method": "TransferredAssets",
    "section": "xTokens",
  },
]
`;

exports[`User gets dusted with ROCs > local Peregrine::balances::[Transfer] native asset 1`] = `
[
  {
    "data": {
      "amount": "(rounded 100000000000000000)",
      "from": "4seWojfEHrk5YKPahdErazQ3CWEHZYi6NV4gKz5AaejWbRPJ",
      "to": "4rsmbFBYpVmWE2LHRsSZKxf22a8cbJLxMZqvVGkGkSDmDBcr",
    },
    "method": "Transfer",
    "section": "balances",
  },
]
`;

exports[`User gets dusted with ROCs > local balances::fungibles::[DustLost] 1`] = `
[
  {
    "data": {
      "account": "4seWojfEHrk5YKPahdErazQ3CWEHZYi6NV4gKz5AaejWbRPJ",
      "amount": "(rounded 51000000000)",
    },
    "method": "DustLost",
    "section": "balances",
  },
]
`;

exports[`User transfers all of his dots > local Peregrine::fungibles::[Transferred] asset {"parents":1,"interior":"Here"} 1`] = `
[
  {
    "data": {
      "amount": 100000000000000,
      "assetId": {
        "interior": "Here",
        "parents": 1,
      },
      "from": "4seWojfEHrk5YKPahdErazQ3CWEHZYi6NV4gKz5AaejWbRPJ",
      "to": "4rsmbFBYpVmWE2LHRsSZKxf22a8cbJLxMZqvVGkGkSDmDBcr",
    },
    "method": "Transferred",
    "section": "fungibles",
  },
]
`;
