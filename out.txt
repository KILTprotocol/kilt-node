       Fresh unicode-ident v1.0.12
       Fresh version_check v0.9.4
       Fresh autocfg v1.3.0
warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/subtle-2.4.1/src/lib.rs:217:5
    |
217 | /     unsafe {
218 | |         // Optimization barrier
219 | |         //
220 | |         // Unsafe is ok, because:
...   |
226 | |         core::ptr::read_volatile(&input as *const u8)
227 | |     }
    | |_____^
    |
    = note: requested on the command line with `-F unsafe-code`

warning: `#[inline]` is ignored on function prototypes
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/subtle-2.4.1/src/lib.rs:260:5
    |
260 |     #[inline]
    |     ^^^^^^^^^
    |
    = note: `#[warn(unused_attributes)]` on by default

warning: `#[inline]` is ignored on function prototypes
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/subtle-2.4.1/src/lib.rs:383:5
    |
383 |     #[inline]
    |     ^^^^^^^^^

warning: `#[inline]` is ignored on function prototypes
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/subtle-2.4.1/src/lib.rs:533:5
    |
533 |     #[inline]
    |     ^^^^^^^^^

       Fresh hashbrown v0.14.5
       Fresh equivalent v1.0.1
       Fresh winnow v0.5.40
       Fresh const-oid v0.9.6
       Fresh subtle v2.4.1
       Fresh cc v1.0.99
       Fresh memchr v2.7.4
warning: `subtle` (lib) generated 4 warnings
       Fresh proc-macro2 v1.0.85
    Checking getrandom v0.2.15
       Fresh indexmap v2.2.6
       Fresh bytes v1.7.2
warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
359 |         buf_get_impl!(self, u16::from_be_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: requested on the command line with `-F unsafe-code`
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
379 |         buf_get_impl!(self, u16::from_le_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
402 |         buf_get_impl!(self, u16::from_ne_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
422 |         buf_get_impl!(self, i16::from_be_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
442 |         buf_get_impl!(self, i16::from_le_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
465 |         buf_get_impl!(self, i16::from_ne_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
485 |         buf_get_impl!(self, u32::from_be_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
505 |         buf_get_impl!(self, u32::from_le_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
528 |         buf_get_impl!(self, u32::from_ne_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
548 |         buf_get_impl!(self, i32::from_be_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
568 |         buf_get_impl!(self, i32::from_le_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
591 |         buf_get_impl!(self, i32::from_ne_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
611 |         buf_get_impl!(self, u64::from_be_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
631 |         buf_get_impl!(self, u64::from_le_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
654 |         buf_get_impl!(self, u64::from_ne_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
674 |         buf_get_impl!(self, i64::from_be_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
694 |         buf_get_impl!(self, i64::from_le_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
717 |         buf_get_impl!(self, i64::from_ne_bytes);
    |         --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
737 |         buf_get_impl!(self, u128::from_be_bytes);
    |         ---------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
757 |         buf_get_impl!(self, u128::from_le_bytes);
    |         ---------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
780 |         buf_get_impl!(self, u128::from_ne_bytes);
    |         ---------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
800 |         buf_get_impl!(self, i128::from_be_bytes);
    |         ---------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
820 |         buf_get_impl!(self, i128::from_le_bytes);
    |         ---------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_impl.rs:27:24
    |
27  |             .map(|src| unsafe { $typ::$conv(*(src as *const _ as *const [_; SIZE])) });
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
843 |         buf_get_impl!(self, i128::from_ne_bytes);
    |         ---------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `buf_get_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: declaration of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:30:1
     |
30   | / pub unsafe trait BufMut {
31   | |     /// Returns the number of bytes that can be written from the current
32   | |     /// position until the end of the buffer is reached.
33   | |     ///
...    |
1341 | |     }
1342 | | }
     | |_^

warning: declaration of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:107:5
    |
107 |     unsafe fn advance_mut(&mut self, cnt: usize);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:218:13
    |
218 |             unsafe { self.advance_mut(cnt) };
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:256:13
    |
256 |             unsafe { self.advance_mut(cnt) };
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:295:13
    |
295 |             unsafe { core::ptr::write_bytes(dst.as_mut_ptr(), val, dst_len) };
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:297:13
    |
297 |             unsafe { self.advance_mut(dst_len) };
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1468:1
     |
1468 | / unsafe impl<T: BufMut + ?Sized> BufMut for &mut T {
1469 | |     deref_forward_bufmut!();
1470 | | }
     | |_^

warning: implementation of an `unsafe` method
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1357:9
     |
1357 | /         unsafe fn advance_mut(&mut self, cnt: usize) {
1358 | |             (**self).advance_mut(cnt)
1359 | |         }
     | |_________^
...
1469 |       deref_forward_bufmut!();
     |       ----------------------- in this macro invocation
     |
     = note: this warning originates in the macro `deref_forward_bufmut` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1472:1
     |
1472 | / unsafe impl<T: BufMut + ?Sized> BufMut for Box<T> {
1473 | |     deref_forward_bufmut!();
1474 | | }
     | |_^

warning: implementation of an `unsafe` method
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1357:9
     |
1357 | /         unsafe fn advance_mut(&mut self, cnt: usize) {
1358 | |             (**self).advance_mut(cnt)
1359 | |         }
     | |_________^
...
1473 |       deref_forward_bufmut!();
     |       ----------------------- in this macro invocation
     |
     = note: this warning originates in the macro `deref_forward_bufmut` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1476:1
     |
1476 | / unsafe impl BufMut for &mut [u8] {
1477 | |     #[inline]
1478 | |     fn remaining_mut(&self) -> usize {
1479 | |         self.len()
...    |
1520 | |     }
1521 | | }
     | |_^

warning: implementation of an `unsafe` method
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1488:5
     |
1488 | /     unsafe fn advance_mut(&mut self, cnt: usize) {
1489 | |         if self.len() < cnt {
1490 | |             panic_advance(cnt, self.len());
1491 | |         }
...    |
1495 | |         *self = b;
1496 | |     }
     | |_____^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1506:9
     |
1506 |         unsafe { self.advance_mut(src.len()) };
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1516:9
     |
1516 | /         unsafe {
1517 | |             ptr::write_bytes(self.as_mut_ptr(), val, cnt);
1518 | |             self.advance_mut(cnt);
1519 | |         }
     | |_________^

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1523:1
     |
1523 | / unsafe impl BufMut for &mut [core::mem::MaybeUninit<u8>] {
1524 | |     #[inline]
1525 | |     fn remaining_mut(&self) -> usize {
1526 | |         self.len()
...    |
1569 | |     }
1570 | | }
     | |_^

warning: implementation of an `unsafe` method
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1535:5
     |
1535 | /     unsafe fn advance_mut(&mut self, cnt: usize) {
1536 | |         if self.len() < cnt {
1537 | |             panic_advance(cnt, self.len());
1538 | |         }
...    |
1542 | |         *self = b;
1543 | |     }
     | |_____^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1552:9
     |
1552 | /         unsafe {
1553 | |             ptr::copy_nonoverlapping(src.as_ptr(), self.as_mut_ptr().cast(), src.len());
1554 | |             self.advance_mut(src.len());
1555 | |         }
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1565:9
     |
1565 | /         unsafe {
1566 | |             ptr::write_bytes(self.as_mut_ptr() as *mut u8, val, cnt);
1567 | |             self.advance_mut(cnt);
1568 | |         }
     | |_________^

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1572:1
     |
1572 | / unsafe impl BufMut for Vec<u8> {
1573 | |     #[inline]
1574 | |     fn remaining_mut(&self) -> usize {
1575 | |         // A vector can never have more than isize::MAX bytes
...    |
1636 | |     }
1637 | | }
     | |_^

warning: implementation of an `unsafe` method
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1580:5
     |
1580 | /     unsafe fn advance_mut(&mut self, cnt: usize) {
1581 | |         let len = self.len();
1582 | |         let remaining = self.capacity() - len;
1583 | |
...    |
1589 | |         self.set_len(len + cnt);
1590 | |     }
     | |_____^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/buf_mut.rs:1605:9
     |
1605 |         unsafe { UninitSlice::from_raw_parts_mut(ptr.add(len), cap - len) }
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/chain.rs:191:1
    |
191 | / unsafe impl<T, U> BufMut for Chain<T, U>
192 | | where
193 | |     T: BufMut,
194 | |     U: BufMut,
...   |
226 | |     }
227 | | }
    | |_^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/chain.rs:210:5
    |
210 | /     unsafe fn advance_mut(&mut self, mut cnt: usize) {
211 | |         let a_rem = self.a.remaining_mut();
212 | |
213 | |         if a_rem != 0 {
...   |
225 | |         self.b.advance_mut(cnt);
226 | |     }
    | |_____^

warning: implementation of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/limit.rs:59:1
   |
59 | / unsafe impl<T: BufMut> BufMut for Limit<T> {
60 | |     fn remaining_mut(&self) -> usize {
61 | |         cmp::min(self.inner.remaining_mut(), self.limit)
62 | |     }
...  |
74 | |     }
75 | | }
   | |_^

warning: implementation of an `unsafe` method
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/limit.rs:70:5
   |
70 | /     unsafe fn advance_mut(&mut self, cnt: usize) {
71 | |         assert!(cnt <= self.limit);
72 | |         self.inner.advance_mut(cnt);
73 | |         self.limit -= cnt;
74 | |     }
   | |_____^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/uninit_slice.rs:37:9
   |
37 |         unsafe { &mut *(slice as *mut [u8] as *mut [MaybeUninit<u8>] as *mut UninitSlice) }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/uninit_slice.rs:56:9
   |
56 |         unsafe { &mut *(slice as *mut [MaybeUninit<u8>] as *mut UninitSlice) }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/uninit_slice.rs:60:9
   |
60 |         unsafe { &*(slice as *const [MaybeUninit<u8>] as *const UninitSlice) }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` method
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/uninit_slice.rs:82:5
   |
82 | /     pub unsafe fn from_raw_parts_mut<'a>(ptr: *mut u8, len: usize) -> &'a mut UninitSlice {
83 | |         let maybe_init: &mut [MaybeUninit<u8>] =
84 | |             core::slice::from_raw_parts_mut(ptr as *mut _, len);
85 | |         Self::uninit(maybe_init)
86 | |     }
   | |_____^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/uninit_slice.rs:110:9
    |
110 |         unsafe { self[index..].as_mut_ptr().write(byte) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/uninit_slice.rs:139:9
    |
139 | /         unsafe {
140 | |             ptr::copy_nonoverlapping(src.as_ptr(), self.as_mut_ptr(), self.len());
141 | |         }
    | |_________^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/buf/uninit_slice.rs:187:5
    |
187 | /     pub unsafe fn as_uninit_slice_mut(&mut self) -> &mut [MaybeUninit<u8>] {
188 | |         &mut self.0
189 | |     }
    | |_____^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:236:9
    |
236 |         unsafe { (self.vtable.is_unique)(&self.data) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:303:19
    |
303 |         ret.ptr = unsafe { ret.ptr.add(begin) };
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:410:9
    |
410 |         unsafe { ret.inc_start(at) };
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:457:9
    |
457 |         unsafe { self.inc_start(at) };
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:537:5
    |
537 | /     pub(crate) unsafe fn with_vtable(
538 | |         ptr: *const u8,
539 | |         len: usize,
540 | |         data: AtomicPtr<()>,
...   |
548 | |         }
549 | |     }
    | |_____^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:555:9
    |
555 |         unsafe { slice::from_raw_parts(self.ptr, self.len) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:559:5
    |
559 | /     unsafe fn inc_start(&mut self, by: usize) {
560 | |         // should already be asserted, but debug assert for tests
561 | |         debug_assert!(self.len >= by, "internal: inc_start out of bounds");
562 | |         self.len -= by;
563 | |         self.ptr = self.ptr.add(by);
564 | |     }
    | |_____^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:568:1
    |
568 | unsafe impl Send for Bytes {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:569:1
    |
569 | unsafe impl Sync for Bytes {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:574:9
    |
574 |         unsafe { (self.vtable.drop)(&mut self.data, self.ptr, self.len) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:581:9
    |
581 |         unsafe { (self.vtable.clone)(&self.data, self.ptr, self.len) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:605:9
    |
605 | /         unsafe {
606 | |             self.inc_start(cnt);
607 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:935:9
    |
935 |         unsafe { (bytes.vtable.to_mut)(&bytes.data, bytes.ptr, bytes.len) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:948:9
    |
948 |         unsafe { (bytes.vtable.to_vec)(&bytes.data, bytes.ptr, bytes.len) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:973:1
    |
973 | / unsafe fn static_clone(_: &AtomicPtr<()>, ptr: *const u8, len: usize) -> Bytes {
974 | |     let slice = slice::from_raw_parts(ptr, len);
975 | |     Bytes::from_static(slice)
976 | | }
    | |_^

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:978:1
    |
978 | / unsafe fn static_to_vec(_: &AtomicPtr<()>, ptr: *const u8, len: usize) -> Vec<u8> {
979 | |     let slice = slice::from_raw_parts(ptr, len);
980 | |     slice.to_vec()
981 | | }
    | |_^

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:983:1
    |
983 | / unsafe fn static_to_mut(_: &AtomicPtr<()>, ptr: *const u8, len: usize) -> BytesMut {
984 | |     let slice = slice::from_raw_parts(ptr, len);
985 | |     BytesMut::from(slice)
986 | | }
    | |_^

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:992:1
    |
992 | / unsafe fn static_drop(_: &mut AtomicPtr<()>, _: *const u8, _: usize) {
993 | |     // nothing to drop for &'static [u8]
994 | | }
    | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1014:1
     |
1014 | / unsafe fn promotable_even_clone(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> Bytes {
1015 | |     let shared = data.load(Ordering::Acquire);
1016 | |     let kind = shared as usize & KIND_MASK;
1017 | |
...    |
1024 | |     }
1025 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1027:1
     |
1027 | / unsafe fn promotable_to_vec(
1028 | |     data: &AtomicPtr<()>,
1029 | |     ptr: *const u8,
1030 | |     len: usize,
...    |
1050 | |     }
1051 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1053:1
     |
1053 | / unsafe fn promotable_to_mut(
1054 | |     data: &AtomicPtr<()>,
1055 | |     ptr: *const u8,
1056 | |     len: usize,
...    |
1079 | |     }
1080 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1082:1
     |
1082 | / unsafe fn promotable_even_to_vec(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> Vec<u8> {
1083 | |     promotable_to_vec(data, ptr, len, |shared| {
1084 | |         ptr_map(shared.cast(), |addr| addr & !KIND_MASK)
1085 | |     })
1086 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1088:1
     |
1088 | / unsafe fn promotable_even_to_mut(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> BytesMut {
1089 | |     promotable_to_mut(data, ptr, len, |shared| {
1090 | |         ptr_map(shared.cast(), |addr| addr & !KIND_MASK)
1091 | |     })
1092 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1094:1
     |
1094 | / unsafe fn promotable_even_drop(data: &mut AtomicPtr<()>, ptr: *const u8, len: usize) {
1095 | |     data.with_mut(|shared| {
1096 | |         let shared = *shared;
1097 | |         let kind = shared as usize & KIND_MASK;
...    |
1106 | |     });
1107 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1109:1
     |
1109 | / unsafe fn promotable_odd_clone(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> Bytes {
1110 | |     let shared = data.load(Ordering::Acquire);
1111 | |     let kind = shared as usize & KIND_MASK;
1112 | |
...    |
1118 | |     }
1119 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1121:1
     |
1121 | / unsafe fn promotable_odd_to_vec(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> Vec<u8> {
1122 | |     promotable_to_vec(data, ptr, len, |shared| shared.cast())
1123 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1125:1
     |
1125 | / unsafe fn promotable_odd_to_mut(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> BytesMut {
1126 | |     promotable_to_mut(data, ptr, len, |shared| shared.cast())
1127 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1129:1
     |
1129 | / unsafe fn promotable_odd_drop(data: &mut AtomicPtr<()>, ptr: *const u8, len: usize) {
1130 | |     data.with_mut(|shared| {
1131 | |         let shared = *shared;
1132 | |         let kind = shared as usize & KIND_MASK;
...    |
1141 | |     });
1142 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1144:1
     |
1144 | / unsafe fn promotable_is_unique(data: &AtomicPtr<()>) -> bool {
1145 | |     let shared = data.load(Ordering::Acquire);
1146 | |     let kind = shared as usize & KIND_MASK;
1147 | |
...    |
1153 | |     }
1154 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1156:1
     |
1156 | / unsafe fn free_boxed_slice(buf: *mut u8, offset: *const u8, len: usize) {
1157 | |     let cap = offset_from(offset, buf) + len;
1158 | |     dealloc(buf, Layout::from_size_align(cap, 1).unwrap())
1159 | | }
     | |_^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1172:9
     |
1172 |         unsafe { dealloc(self.buf, Layout::from_size_align(self.cap, 1).unwrap()) }
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1194:1
     |
1194 | / unsafe fn shared_clone(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> Bytes {
1195 | |     let shared = data.load(Ordering::Relaxed);
1196 | |     shallow_clone_arc(shared as _, ptr, len)
1197 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1199:1
     |
1199 | / unsafe fn shared_to_vec_impl(shared: *mut Shared, ptr: *const u8, len: usize) -> Vec<u8> {
1200 | |     // Check that the ref_cnt is 1 (unique).
1201 | |     //
1202 | |     // If it is unique, then it is set to 0 with AcqRel fence for the same
...    |
1225 | |     }
1226 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1228:1
     |
1228 | / unsafe fn shared_to_vec(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> Vec<u8> {
1229 | |     shared_to_vec_impl(data.load(Ordering::Relaxed).cast(), ptr, len)
1230 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1232:1
     |
1232 | / unsafe fn shared_to_mut_impl(shared: *mut Shared, ptr: *const u8, len: usize) -> BytesMut {
1233 | |     // The goal is to check if the current handle is the only handle
1234 | |     // that currently has access to the buffer. This is done by
1235 | |     // checking if the `ref_cnt` is currently 1.
...    |
1264 | |     }
1265 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1267:1
     |
1267 | / unsafe fn shared_to_mut(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> BytesMut {
1268 | |     shared_to_mut_impl(data.load(Ordering::Relaxed).cast(), ptr, len)
1269 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1271:1
     |
1271 | / pub(crate) unsafe fn shared_is_unique(data: &AtomicPtr<()>) -> bool {
1272 | |     let shared = data.load(Ordering::Acquire);
1273 | |     let ref_cnt = (*shared.cast::<Shared>()).ref_cnt.load(Ordering::Relaxed);
1274 | |     ref_cnt == 1
1275 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1277:1
     |
1277 | / unsafe fn shared_drop(data: &mut AtomicPtr<()>, _ptr: *const u8, _len: usize) {
1278 | |     data.with_mut(|shared| {
1279 | |         release_shared(shared.cast());
1280 | |     });
1281 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1283:1
     |
1283 | / unsafe fn shallow_clone_arc(shared: *mut Shared, ptr: *const u8, len: usize) -> Bytes {
1284 | |     let old_size = (*shared).ref_cnt.fetch_add(1, Ordering::Relaxed);
1285 | |
1286 | |     if old_size > usize::MAX >> 1 {
...    |
1295 | |     }
1296 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1299:1
     |
1299 | / unsafe fn shallow_clone_vec(
1300 | |     atom: &AtomicPtr<()>,
1301 | |     ptr: *const (),
1302 | |     buf: *mut u8,
...    |
1367 | |     }
1368 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes.rs:1370:1
     |
1370 | / unsafe fn release_shared(ptr: *mut Shared) {
1371 | |     // `Shared` storage... follow the drop steps from Arc.
1372 | |     if (*ptr).ref_cnt.fetch_sub(1, Ordering::Release) != 1 {
1373 | |         return;
...    |
1399 | |     drop(Box::from_raw(ptr));
1400 | | }
     | |_^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:250:13
    |
250 | /             unsafe {
251 | |                 let off = bytes.get_vec_pos();
252 | |                 let vec = rebuild_vec(bytes.ptr.as_ptr(), bytes.len, bytes.cap, off);
253 | |                 let mut b: Bytes = vec.into();
254 | |                 b.advance(off);
255 | |                 b
256 | |             }
    | |_____________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:263:13
    |
263 |             unsafe { Bytes::with_vtable(ptr, len, data, &SHARED_VTABLE) }
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:325:9
    |
325 | /         unsafe {
326 | |             let mut other = self.shallow_clone();
327 | |             // SAFETY: We've checked that `at` <= `self.capacity()` above.
328 | |             other.advance_unchecked(at);
...   |
331 | |             other
332 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:401:9
    |
401 | /         unsafe {
402 | |             let mut other = self.shallow_clone();
403 | |             // SAFETY: We've checked that `at` <= `self.len()` and we know that `self.len()` <=
404 | |             // `self.capacity()`.
...   |
408 | |             other
409 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:435:13
    |
435 |             unsafe { self.set_len(len) };
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:452:9
    |
452 |         unsafe { self.set_len(0) };
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:493:9
    |
493 |         unsafe { ptr::write_bytes(dst, value, additional) };
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:497:9
    |
497 |         unsafe { self.set_len(new_len) };
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:526:5
    |
526 | /     pub unsafe fn set_len(&mut self, len: usize) {
527 | |         debug_assert!(len <= self.cap, "set_len out of bounds");
528 | |         self.len = len;
529 | |     }
    | |_____^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:619:13
    |
619 | /             unsafe {
620 | |                 let off = self.get_vec_pos();
621 | |
622 | |                 // Only reuse space if we can satisfy the requested additional space.
...   |
666 | |                 return true;
667 | |             }
    | |_____________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:683:9
    |
683 | /         unsafe {
684 | |             // First, try to reclaim the buffer. This is possible if the current
685 | |             // handle is the only outstanding handle pointing to the buffer.
686 | |             if (*shared).is_unique() {
...   |
754 | |             }
755 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:760:38
    |
760 |         let original_capacity_repr = unsafe { (*shared).original_capacity_repr };
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:773:9
    |
773 |         unsafe { release_shared(shared) };
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:865:9
    |
865 | /         unsafe {
866 | |             let dst = self.spare_capacity_mut();
867 | |             // Reserved above
868 | |             debug_assert!(dst.len() >= cnt);
869 | |
870 | |             ptr::copy_nonoverlapping(extend.as_ptr(), dst.as_mut_ptr().cast(), cnt);
871 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:873:9
    |
873 | /         unsafe {
874 | |             self.advance_mut(cnt);
875 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:941:9
    |
941 |         unsafe { slice::from_raw_parts(self.ptr.as_ptr(), self.len) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:946:9
    |
946 |         unsafe { slice::from_raw_parts_mut(self.ptr.as_ptr(), self.len) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:954:5
    |
954 | /     pub(crate) unsafe fn advance_unchecked(&mut self, count: usize) {
955 | |         // Setting the start to 0 is a no-op, so return early if this is the
956 | |         // case.
957 | |         if count == 0 {
...   |
988 | |         self.cap -= count;
989 | |     }
    | |_____^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:996:19
    |
996 |         let ptr = unsafe { self.ptr.as_ptr().add(self.len) };
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` method
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1016:5
     |
1016 | /     unsafe fn promote_to_shared(&mut self, ref_cnt: usize) {
1017 | |         debug_assert_eq!(self.kind(), KIND_VEC);
1018 | |         debug_assert!(ref_cnt == 1 || ref_cnt == 2);
1019 | |
...    |
1046 | |         self.data = shared;
1047 | |     }
     | |_____^

warning: implementation of an `unsafe` method
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1056:5
     |
1056 | /     unsafe fn shallow_clone(&mut self) -> BytesMut {
1057 | |         if self.kind() == KIND_ARC {
1058 | |             increment_shared(self.data);
1059 | |             ptr::read(self)
...    |
1063 | |         }
1064 | |     }
     | |_____^

warning: implementation of an `unsafe` method
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1067:5
     |
1067 | /     unsafe fn get_vec_pos(&self) -> usize {
1068 | |         debug_assert_eq!(self.kind(), KIND_VEC);
1069 | |
1070 | |         self.data as usize >> VEC_POS_OFFSET
1071 | |     }
     | |_____^

warning: implementation of an `unsafe` method
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1074:5
     |
1074 | /     unsafe fn set_vec_pos(&mut self, pos: usize) {
1075 | |         debug_assert_eq!(self.kind(), KIND_VEC);
1076 | |         debug_assert!(pos <= MAX_VEC_POS);
1077 | |
1078 | |         self.data = invalid_ptr((pos << VEC_POS_OFFSET) | (self.data as usize & NOT_VEC_POS_MASK));
1079 | |     }
     | |_____^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1112:9
     |
1112 | /         unsafe {
1113 | |             let ptr = self.ptr.as_ptr().add(self.len);
1114 | |             let len = self.cap - self.len;
1115 | |
1116 | |             slice::from_raw_parts_mut(ptr.cast(), len)
1117 | |         }
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1126:13
     |
1126 | /             unsafe {
1127 | |                 let off = self.get_vec_pos();
1128 | |
1129 | |                 // Vector storage, free the vector
1130 | |                 let _ = rebuild_vec(self.ptr.as_ptr(), self.len, self.cap, off);
1131 | |             }
     | |_____________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1133:13
     |
1133 |             unsafe { release_shared(self.data) };
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1157:9
     |
1157 | /         unsafe {
1158 | |             // SAFETY: We've checked that `cnt` <= `self.remaining()` and we know that
1159 | |             // `self.remaining()` <= `self.cap`.
1160 | |             self.advance_unchecked(cnt);
1161 | |         }
     | |_________^

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1169:1
     |
1169 | / unsafe impl BufMut for BytesMut {
1170 | |     #[inline]
1171 | |     fn remaining_mut(&self) -> usize {
1172 | |         usize::MAX - self.len()
...    |
1223 | |     }
1224 | | }
     | |_^

warning: implementation of an `unsafe` method
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1176:5
     |
1176 | /     unsafe fn advance_mut(&mut self, cnt: usize) {
1177 | |         let remaining = self.cap - self.len();
1178 | |         if cnt > remaining {
1179 | |             super::panic_advance(cnt, remaining);
...    |
1182 | |         self.len = self.len() + cnt;
1183 | |     }
     | |_____^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1214:9
     |
1214 | /         unsafe {
1215 | |             let dst = self.spare_capacity_mut();
1216 | |             // Reserved above
1217 | |             debug_assert!(dst.len() >= cnt);
...    |
1221 | |             self.advance_mut(cnt);
1222 | |         }
     | |_________^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1420:1
     |
1420 | / unsafe fn increment_shared(ptr: *mut Shared) {
1421 | |     let old_size = (*ptr).ref_count.fetch_add(1, Ordering::Relaxed);
1422 | |
1423 | |     if old_size > isize::MAX as usize {
1424 | |         crate::abort();
1425 | |     }
1426 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1428:1
     |
1428 | / unsafe fn release_shared(ptr: *mut Shared) {
1429 | |     // `Shared` storage... follow the drop steps from Arc.
1430 | |     if (*ptr).ref_count.fetch_sub(1, Ordering::Release) != 1 {
1431 | |         return;
...    |
1457 | |     drop(Box::from_raw(ptr));
1458 | | }
     | |_^

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1547:1
     |
1547 | unsafe impl Send for BytesMut {}
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1548:1
     |
1548 | unsafe impl Sync for BytesMut {}
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1712:13
     |
1712 | /             unsafe {
1713 | |                 let off = bytes.get_vec_pos();
1714 | |                 rebuild_vec(bytes.ptr.as_ptr(), bytes.len, bytes.cap, off)
1715 | |             }
     | |_____________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1719:16
     |
1719 |             if unsafe { (*shared).is_unique() } {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1720:40
     |
1720 |                 let vec = mem::replace(unsafe { &mut (*shared).vec }, Vec::new());
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1722:17
     |
1722 |                 unsafe { release_shared(shared) };
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1732:9
     |
1732 | /         unsafe {
1733 | |             ptr::copy(bytes.ptr.as_ptr(), vec.as_mut_ptr(), len);
1734 | |             vec.set_len(len);
1735 | |         }
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1746:9
     |
1746 |         unsafe { NonNull::new_unchecked(ptr) }
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1762:1
     |
1762 | / unsafe fn rebuild_vec(ptr: *mut u8, mut len: usize, mut cap: usize, off: usize) -> Vec<u8> {
1763 | |     let ptr = ptr.sub(off);
1764 | |     len += off;
1765 | |     cap += off;
1766 | |
1767 | |     Vec::from_raw_parts(ptr, len, cap)
1768 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1780:1
     |
1780 | / unsafe fn shared_v_clone(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> Bytes {
1781 | |     let shared = data.load(Ordering::Relaxed) as *mut Shared;
1782 | |     increment_shared(shared);
1783 | |
1784 | |     let data = AtomicPtr::new(shared as *mut ());
1785 | |     Bytes::with_vtable(ptr, len, data, &SHARED_VTABLE)
1786 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1788:1
     |
1788 | / unsafe fn shared_v_to_vec(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> Vec<u8> {
1789 | |     let shared: *mut Shared = data.load(Ordering::Relaxed).cast();
1790 | |
1791 | |     if (*shared).is_unique() {
...    |
1807 | |     }
1808 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1810:1
     |
1810 | / unsafe fn shared_v_to_mut(data: &AtomicPtr<()>, ptr: *const u8, len: usize) -> BytesMut {
1811 | |     let shared: *mut Shared = data.load(Ordering::Relaxed).cast();
1812 | |
1813 | |     if (*shared).is_unique() {
...    |
1836 | |     }
1837 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1839:1
     |
1839 | / unsafe fn shared_v_is_unique(data: &AtomicPtr<()>) -> bool {
1840 | |     let shared = data.load(Ordering::Acquire);
1841 | |     let ref_count = (*shared.cast::<Shared>()).ref_count.load(Ordering::Relaxed);
1842 | |     ref_count == 1
1843 | | }
     | |_^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.7.2/src/bytes_mut.rs:1845:1
     |
1845 | / unsafe fn shared_v_drop(data: &mut AtomicPtr<()>, _ptr: *const u8, _len: usize) {
1846 | |     data.with_mut(|shared| {
1847 | |         release_shared(*shared as *mut Shared);
1848 | |     });
1849 | | }
     | |_^

       Fresh tinyvec_macros v0.1.1
       Fresh log v0.4.21
       Fresh zerocopy v0.7.34
       Fresh percent-encoding v2.3.1
     Running `CARGO=/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=getrandom CARGO_MANIFEST_DIR=/home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15 CARGO_PKG_AUTHORS='The Rand Project Developers' CARGO_PKG_DESCRIPTION='A small cross-platform library for retrieving random data from system source' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=getrandom CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-random/getrandom' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.15 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=15 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/antonio/Developer/kilt-node/target/debug/deps:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib' /home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name getrandom --edition=2018 /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="std"' -C metadata=ebe5de74c1ed5fc2 -C extra-filename=-ebe5de74c1ed5fc2 --out-dir /home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps --target wasm32-unknown-unknown -L dependency=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps -L dependency=/home/antonio/Developer/kilt-node/target/debug/deps --extern cfg_if=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps/libcfg_if-61136ad543fe3f21.rmeta --cap-lints warn '-Dclippy::arithmetic_side_effects' '-Dclippy::as_conversions' '-Dclippy::assertions_on_result_states' '-Dclippy::cast_possible_wrap' '-Dclippy::dbg_macro' '-Dclippy::expect_used' '-Dclippy::float_arithmetic' '-Dclippy::float_cmp_const' '-Dclippy::index_refutable_slice' '-Dclippy::indexing_slicing' '-Dclippy::lossy_float_literal' '-Dclippy::panic' '-Dclippy::string_slice' '-Dclippy::todo' '-Dclippy::unimplemented' '-Dclippy::unreachable' '-Dclippy::unwrap_used' -Funsafe_code '-Wclippy::integer_division' '-Wclippy::modulo_arithmetic' '-Wclippy::print_stderr' '-Wclippy::print_stdout'`
warning: `bytes` (lib) generated 143 warnings
       Fresh quote v1.0.36
       Fresh typenum v1.17.0
       Fresh tinyvec v1.6.0
warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/io.rs:564:23
    |
564 |             let buf = unsafe { slice_to_u8_mut(dst) };
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: requested on the command line with `-F unsafe-code`

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/io.rs:599:23
    |
599 |             let buf = unsafe { slice_to_u8_mut(dst) };
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/io.rs:637:23
    |
637 |             let buf = unsafe { slice_to_u8_mut(dst) };
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/io.rs:678:23
    |
678 |             let buf = unsafe { slice_to_u8_mut(dst) };
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/io.rs:717:19
    |
717 |         let buf = unsafe { slice_to_u8_mut(dst) };
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/io.rs:749:23
    |
749 |             let buf = unsafe { slice_to_u8_mut(dst) };
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/io.rs:784:23
    |
784 |             let buf = unsafe { slice_to_u8_mut(dst) };
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/io.rs:822:23
    |
822 |             let buf = unsafe { slice_to_u8_mut(dst) };
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/io.rs:863:23
    |
863 |             let buf = unsafe { slice_to_u8_mut(dst) };
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/io.rs:904:23
    |
904 |             let buf = unsafe { slice_to_u8_mut(dst) };
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/io.rs:989:23
    |
989 |             let buf = unsafe { slice_to_u8_mut(dst) };
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: declaration of an `unsafe` function
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/io.rs:1587:1
     |
1587 | / unsafe fn slice_to_u8_mut<T: Copy>(slice: &mut [T]) -> &mut [u8] {
1588 | |     use std::mem::size_of;
1589 | |
1590 | |     let len = size_of::<T>() * slice.len();
1591 | |     slice::from_raw_parts_mut(slice.as_mut_ptr() as *mut u8, len)
1592 | | }
     | |_^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1091:19
     |
1091 |           let dst = unsafe {
     |  ___________________^
1092 | |             slice::from_raw_parts_mut(dst.as_mut_ptr() as *mut u16, dst.len())
1093 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1120:19
     |
1120 |           let dst = unsafe {
     |  ___________________^
1121 | |             slice::from_raw_parts_mut(dst.as_mut_ptr() as *mut u32, dst.len())
1122 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1149:19
     |
1149 |           let dst = unsafe {
     |  ___________________^
1150 | |             slice::from_raw_parts_mut(dst.as_mut_ptr() as *mut u64, dst.len())
1151 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1178:19
     |
1178 |           let dst = unsafe {
     |  ___________________^
1179 | |             slice::from_raw_parts_mut(dst.as_mut_ptr() as *mut u128, dst.len())
1180 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1208:19
     |
1208 |           let dst = unsafe {
     |  ___________________^
1209 | |             const _: () = assert!(align_of::<u32>() <= align_of::<f32>());
1210 | |             slice::from_raw_parts_mut(dst.as_mut_ptr() as *mut u32, dst.len())
1211 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1270:19
     |
1270 |           let dst = unsafe {
     |  ___________________^
1271 | |             const _: () = assert!(align_of::<u64>() <= align_of::<f64>());
1272 | |             slice::from_raw_parts_mut(dst.as_mut_ptr() as *mut u64, dst.len())
1273 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1429:19
     |
1429 |           let src = unsafe {
     |  ___________________^
1430 | |             slice::from_raw_parts(src.as_ptr() as *const u8, src.len())
1431 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1457:19
     |
1457 |           let src = unsafe {
     |  ___________________^
1458 | |             slice::from_raw_parts(src.as_ptr() as *const u16, src.len())
1459 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1485:19
     |
1485 |           let src = unsafe {
     |  ___________________^
1486 | |             slice::from_raw_parts(src.as_ptr() as *const u32, src.len())
1487 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1513:19
     |
1513 |           let src = unsafe {
     |  ___________________^
1514 | |             slice::from_raw_parts(src.as_ptr() as *const u64, src.len())
1515 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1541:19
     |
1541 |           let src = unsafe {
     |  ___________________^
1542 | |             slice::from_raw_parts(src.as_ptr() as *const u128, src.len())
1543 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1570:19
     |
1570 |           let src = unsafe {
     |  ___________________^
1571 | |             slice::from_raw_parts(src.as_ptr() as *const u32, src.len())
1572 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1599:19
     |
1599 |           let src = unsafe {
     |  ___________________^
1600 | |             slice::from_raw_parts(src.as_ptr() as *const u64, src.len())
1601 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1700:19
     |
1700 |           let src = unsafe {
     |  ___________________^
1701 | |             slice::from_raw_parts_mut(src.as_mut_ptr() as *mut u16, src.len())
1702 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1725:19
     |
1725 |           let src = unsafe {
     |  ___________________^
1726 | |             slice::from_raw_parts_mut(src.as_mut_ptr() as *mut u32, src.len())
1727 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1750:19
     |
1750 |           let src = unsafe {
     |  ___________________^
1751 | |             slice::from_raw_parts_mut(src.as_mut_ptr() as *mut u64, src.len())
1752 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:1775:19
     |
1775 |           let src = unsafe {
     |  ___________________^
1776 | |             slice::from_raw_parts_mut(src.as_mut_ptr() as *mut u128, src.len())
1777 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:2001:9
     |
2001 | /         unsafe {
2002 | |             let bytes = *(&n.to_be() as *const u64 as *const [u8; 8]);
2003 | |             copy_nonoverlapping(
2004 | |                 bytes.as_ptr().offset((8 - nbytes) as isize),
...    |
2007 | |             );
2008 | |         }
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:2015:9
     |
2015 | /         unsafe {
2016 | |             let bytes = *(&n.to_be() as *const u128 as *const [u8; 16]);
2017 | |             copy_nonoverlapping(
2018 | |                 bytes.as_ptr().offset((16 - nbytes) as isize),
...    |
2021 | |             );
2022 | |         }
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:2105:17
     |
2105 | /                 unsafe {
2106 | |                     let int = *(n as *const f32 as *const u32);
2107 | |                     *n = *(&int.to_be() as *const u32 as *const f32);
2108 | |                 }
     | |_________________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:2117:17
     |
2117 | /                 unsafe {
2118 | |                     let int = *(n as *const f64 as *const u64);
2119 | |                     *n = *(&int.to_be() as *const u64 as *const f64);
2120 | |                 }
     | |_________________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:2187:9
     |
2187 | /         unsafe {
2188 | |             let bytes = *(&n.to_le() as *const u64 as *const [u8; 8]);
2189 | |             copy_nonoverlapping(bytes.as_ptr(), buf.as_mut_ptr(), nbytes);
2190 | |         }
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:2197:9
     |
2197 | /         unsafe {
2198 | |             let bytes = *(&n.to_le() as *const u128 as *const [u8; 16]);
2199 | |             copy_nonoverlapping(bytes.as_ptr(), buf.as_mut_ptr(), nbytes);
2200 | |         }
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:2283:17
     |
2283 | /                 unsafe {
2284 | |                     let int = *(n as *const f32 as *const u32);
2285 | |                     *n = *(&int.to_le() as *const u32 as *const f32);
2286 | |                 }
     | |_________________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs:2295:17
     |
2295 | /                 unsafe {
2296 | |                     let int = *(n as *const f64 as *const u64);
2297 | |                     *n = *(&int.to_le() as *const u64 as *const f64);
2298 | |                 }
     | |_________________^

       Fresh unicode-bidi v0.3.15
       Fresh form_urlencoded v1.2.1
       Fresh sp-std v14.0.0 (https://github.com/paritytech/polkadot-sdk?branch=release-crates-io-v1.7.0#e046d3b2)
warning: `byteorder` (lib) generated 37 warnings
       Fresh syn v2.0.66
       Fresh syn v1.0.109
       Fresh num-traits v0.2.19
warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-traits-0.2.19/src/cast.rs:284:9
    |
284 |         unsafe { $float.to_int_unchecked::<$int>() }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
374 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = note: requested on the command line with `-F unsafe-code`
    = note: this warning originates in the macro `float_to_int_unchecked` which comes from the expansion of the macro `impl_to_primitive_float` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-traits-0.2.19/src/cast.rs:284:9
    |
284 |         unsafe { $float.to_int_unchecked::<$int>() }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
374 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `float_to_int_unchecked` which comes from the expansion of the macro `impl_to_primitive_float` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-traits-0.2.19/src/cast.rs:284:9
    |
284 |         unsafe { $float.to_int_unchecked::<$int>() }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
375 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `float_to_int_unchecked` which comes from the expansion of the macro `impl_to_primitive_float` (in Nightly builds, run with -Z macro-backtrace for more info)

       Fresh ahash v0.7.8
       Fresh libc v0.2.155
       Fresh unicode-normalization v0.1.22
       Fresh stable_deref_trait v1.2.0
       Fresh fallible-iterator v0.2.0
       Fresh crc32fast v1.4.2
    Checking errno v0.3.9
warning: `num-traits` (lib) generated 48 warnings (45 duplicates)
warning: cargo:rustc-check-cfg requires -Zcheck-cfg=output flag
warning: cargo:rustc-check-cfg requires -Zcheck-cfg=output flag
       Fresh serde_derive v1.0.203
       Fresh zeroize_derive v1.4.2
       Fresh impl-trait-for-tuples v0.2.2
       Fresh hashbrown v0.12.3
       Fresh Inflector v0.11.4
       Fresh idna v0.5.0
       Fresh derive_more v0.99.18
       Fresh thiserror-impl v1.0.61
       Fresh paste v1.0.15
       Fresh semver v1.0.23
       Fresh pin-project-lite v0.2.14
       Fresh bitflags v2.5.0
     Running `CARGO=/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=errno CARGO_MANIFEST_DIR=/home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9 CARGO_PKG_AUTHORS='Chris Wong <lambda.fairy@gmail.com>' CARGO_PKG_DESCRIPTION='Cross-platform interface to the `errno` variable.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=errno CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/lambda-fairy/rust-errno' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.3.9 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=9 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/antonio/Developer/kilt-node/target/debug/deps:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib' /home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name errno --edition=2018 /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="std"' -C metadata=5d120ce676864a56 -C extra-filename=-5d120ce676864a56 --out-dir /home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps --target wasm32-unknown-unknown -L dependency=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps -L dependency=/home/antonio/Developer/kilt-node/target/debug/deps --cap-lints warn '-Dclippy::arithmetic_side_effects' '-Dclippy::as_conversions' '-Dclippy::assertions_on_result_states' '-Dclippy::cast_possible_wrap' '-Dclippy::dbg_macro' '-Dclippy::expect_used' '-Dclippy::float_arithmetic' '-Dclippy::float_cmp_const' '-Dclippy::index_refutable_slice' '-Dclippy::indexing_slicing' '-Dclippy::lossy_float_literal' '-Dclippy::panic' '-Dclippy::string_slice' '-Dclippy::todo' '-Dclippy::unimplemented' '-Dclippy::unreachable' '-Dclippy::unwrap_used' -Funsafe_code '-Wclippy::integer_division' '-Wclippy::modulo_arithmetic' '-Wclippy::print_stderr' '-Wclippy::print_stdout'`
warning: cargo:rustc-check-cfg requires -Zcheck-cfg=output flag
warning: cargo:rustc-check-cfg requires -Zcheck-cfg=output flag
warning: cargo:rustc-check-cfg requires -Zcheck-cfg=output flag
       Fresh zeroize v1.8.1
warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zeroize-1.8.1/src/lib.rs:414:9
    |
414 | /         unsafe {
415 | |             volatile_set((self as *mut Self).cast::<u8>(), 0, mem::size_of::<Self>());
416 | |         }
    | |_________^
    |
    = note: requested on the command line with `-F unsafe-code`

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zeroize-1.8.1/src/lib.rs:426:9
    |
426 |         unsafe { ptr::write_volatile(self, None) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zeroize-1.8.1/src/lib.rs:443:9
    |
443 |         unsafe { ptr::write_volatile(self, MaybeUninit::zeroed()) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zeroize-1.8.1/src/lib.rs:469:9
    |
469 |         unsafe { volatile_set(ptr, MaybeUninit::zeroed(), size) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zeroize-1.8.1/src/lib.rs:495:9
    |
495 |         unsafe { volatile_set(self.as_mut_ptr(), Z::default(), self.len()) };
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zeroize-1.8.1/src/lib.rs:504:9
    |
504 |         unsafe { self.as_bytes_mut().zeroize() }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zeroize-1.8.1/src/lib.rs:591:9
    |
591 |         unsafe { self.as_mut_vec() }.zeroize();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zeroize-1.8.1/src/lib.rs:761:5
    |
761 |     unsafe { ptr::write_volatile(dst, src) }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zeroize-1.8.1/src/lib.rs:773:1
    |
773 | / unsafe fn volatile_set<T: Copy + Sized>(dst: *mut T, src: T, count: usize) {
774 | |     // TODO(tarcieri): use `volatile_set_memory` when stabilized
775 | |     for i in 0..count {
776 | |         // Safety:
...   |
788 | |     }
789 | | }
    | |_^

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/zeroize-1.8.1/src/lib.rs:839:1
    |
839 | / pub unsafe fn zeroize_flat_type<F: Sized>(data: *mut F) {
840 | |     let size = mem::size_of::<F>();
841 | |     // Safety:
842 | |     //
...   |
846 | |     atomic_fence()
847 | | }
    | |_^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.203/src/de/format.rs:16:9
   |
16 |         unsafe { str::from_utf8_unchecked(slice) }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-F unsafe-code`

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.203/src/ser/impls.rs:884:23
    |
884 |             let buf = unsafe { str::from_utf8_unchecked(&buf[..written]) };
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

       Fresh serde v1.0.203
       Fresh url v2.5.2
       Fresh thiserror v1.0.61
       Fresh rustc_version v0.4.0
       Fresh crunchy v0.2.2
       Fresh anyhow v1.0.86
       Fresh target-lexicon v0.12.14
       Fresh tracing-core v0.1.32
       Fresh aho-corasick v1.1.3
       Fresh rustc-demangle v0.1.24
       Fresh regex-syntax v0.8.4
       Fresh prettyplease v0.2.20
       Fresh fs-err v2.11.0
       Fresh memoffset v0.8.0
warning: `zeroize` (lib) generated 10 warnings
warning: `serde` (lib) generated 2 warnings
       Fresh generic-array v0.14.7
warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/hex.rs:46:25
   |
46 |             f.write_str(unsafe { str::from_utf8_unchecked(&res[..max_digits]) })?;
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-F unsafe-code`

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/hex.rs:59:29
   |
59 |                 f.write_str(unsafe { str::from_utf8_unchecked(&buf[..n]) })?;
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/hex.rs:86:25
   |
86 |             f.write_str(unsafe { str::from_utf8_unchecked(&res[..max_digits]) })?;
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/hex.rs:99:29
   |
99 |                 f.write_str(unsafe { str::from_utf8_unchecked(&buf[..n]) })?;
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/impls.rs:132:21
    |
132 |                       unsafe { $crate::transmute(arr) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
183 | / impl_from! {
184 | |     1  => ::typenum::U1,
185 | |     2  => ::typenum::U2,
186 | |     3  => ::typenum::U3,
...   |
215 | |     32 => ::typenum::U32
216 | | }
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/impls.rs:140:21
    |
140 |                       unsafe { $crate::transmute(sel) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
183 | / impl_from! {
184 | |     1  => ::typenum::U1,
185 | |     2  => ::typenum::U2,
186 | |     3  => ::typenum::U3,
...   |
215 | |     32 => ::typenum::U32
216 | | }
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/impls.rs:147:21
    |
147 |                       unsafe { &*(slice.as_ptr() as *const GenericArray<T, $ty>) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
183 | / impl_from! {
184 | |     1  => ::typenum::U1,
185 | |     2  => ::typenum::U2,
186 | |     3  => ::typenum::U3,
...   |
215 | |     32 => ::typenum::U32
216 | | }
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/impls.rs:154:21
    |
154 |                       unsafe { &mut *(slice.as_mut_ptr() as *mut GenericArray<T, $ty>) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
183 | / impl_from! {
184 | |     1  => ::typenum::U1,
185 | |     2  => ::typenum::U2,
186 | |     3  => ::typenum::U3,
...   |
215 | |     32 => ::typenum::U32
216 | | }
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/impls.rs:169:21
    |
169 |                       unsafe { $crate::transmute(self) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
183 | / impl_from! {
184 | |     1  => ::typenum::U1,
185 | |     2  => ::typenum::U2,
186 | |     3  => ::typenum::U3,
...   |
215 | |     32 => ::typenum::U32
216 | | }
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/impls.rs:176:21
    |
176 |                       unsafe { $crate::transmute(self) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
183 | / impl_from! {
184 | |     1  => ::typenum::U1,
185 | |     2  => ::typenum::U2,
186 | |     3  => ::typenum::U3,
...   |
215 | |     32 => ::typenum::U32
216 | | }
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/impls.rs:132:21
    |
132 |                       unsafe { $crate::transmute(arr) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
219 | / impl_from! {
220 | |     33 => ::typenum::U33,
221 | |     34 => ::typenum::U34,
222 | |     35 => ::typenum::U35,
...   |
268 | |     1024 => ::typenum::U1024
269 | | }
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/impls.rs:140:21
    |
140 |                       unsafe { $crate::transmute(sel) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
219 | / impl_from! {
220 | |     33 => ::typenum::U33,
221 | |     34 => ::typenum::U34,
222 | |     35 => ::typenum::U35,
...   |
268 | |     1024 => ::typenum::U1024
269 | | }
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/impls.rs:147:21
    |
147 |                       unsafe { &*(slice.as_ptr() as *const GenericArray<T, $ty>) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
219 | / impl_from! {
220 | |     33 => ::typenum::U33,
221 | |     34 => ::typenum::U34,
222 | |     35 => ::typenum::U35,
...   |
268 | |     1024 => ::typenum::U1024
269 | | }
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/impls.rs:154:21
    |
154 |                       unsafe { &mut *(slice.as_mut_ptr() as *mut GenericArray<T, $ty>) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
219 | / impl_from! {
220 | |     33 => ::typenum::U33,
221 | |     34 => ::typenum::U34,
222 | |     35 => ::typenum::U35,
...   |
268 | |     1024 => ::typenum::U1024
269 | | }
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/impls.rs:169:21
    |
169 |                       unsafe { $crate::transmute(self) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
219 | / impl_from! {
220 | |     33 => ::typenum::U33,
221 | |     34 => ::typenum::U34,
222 | |     35 => ::typenum::U35,
...   |
268 | |     1024 => ::typenum::U1024
269 | | }
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/impls.rs:176:21
    |
176 |                       unsafe { $crate::transmute(self) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
219 | / impl_from! {
220 | |     33 => ::typenum::U33,
221 | |     34 => ::typenum::U34,
222 | |     35 => ::typenum::U35,
...   |
268 | |     1024 => ::typenum::U1024
269 | | }
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: declaration of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/functional.rs:12:1
   |
12 | / pub unsafe trait MappedGenericSequence<T, U>: GenericSequence<T>
13 | | where
14 | |     Self::Length: ArrayLength<U>,
15 | | {
16 | |     /// Mapped sequence type
17 | |     type Mapped: GenericSequence<U, Length = Self::Length>;
18 | | }
   | |_^

warning: implementation of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/functional.rs:20:1
   |
20 | / unsafe impl<'a, T, U, S: MappedGenericSequence<T, U>> MappedGenericSequence<T, U> for &'a S
21 | | where
22 | |     &'a S: GenericSequence<T>,
23 | |     S: GenericSequence<T, Length = <&'a S as GenericSequence<T>>::Length>,
...  |
26 | |     type Mapped = <S as MappedGenericSequence<T, U>>::Mapped;
27 | | }
   | |_^

warning: implementation of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/functional.rs:29:1
   |
29 | / unsafe impl<'a, T, U, S: MappedGenericSequence<T, U>> MappedGenericSequence<T, U> for &'a mut S
30 | | where
31 | |     &'a mut S: GenericSequence<T>,
32 | |     S: GenericSequence<T, Length = <&'a mut S as GenericSequence<T>>::Length>,
...  |
35 | |     type Mapped = <S as MappedGenericSequence<T, U>>::Mapped;
36 | | }
   | |_^

warning: declaration of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/functional.rs:43:1
   |
43 | / pub unsafe trait FunctionalSequence<T>: GenericSequence<T> {
44 | |     /// Maps a `GenericSequence` to another `GenericSequence`.
45 | |     ///
46 | |     /// If the mapping function panics, any already initialized elements in the new sequence
...  |
82 | |     }
83 | | }
   | |_^

warning: implementation of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/functional.rs:85:1
   |
85 | / unsafe impl<'a, T, S: GenericSequence<T>> FunctionalSequence<T> for &'a S
86 | | where
87 | |     &'a S: GenericSequence<T>,
88 | | {
89 | | }
   | |_^

warning: implementation of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/functional.rs:91:1
   |
91 | / unsafe impl<'a, T, S: GenericSequence<T>> FunctionalSequence<T> for &'a mut S
92 | | where
93 | |     &'a mut S: GenericSequence<T>,
94 | | {
95 | | }
   | |_^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/iter.rs:84:17
   |
84 | /                 unsafe {
85 | |                     ptr::drop_in_place(p);
86 | |                 }
   | |_________________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/iter.rs:101:25
    |
101 |         let mut array = unsafe { ptr::read(&self.array) };
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/iter.rs:105:13
    |
105 |             unsafe { ptr::write(dst, src.clone()) };
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/iter.rs:126:21
    |
126 |             let p = unsafe { Some(ptr::read(self.array.get_unchecked(self.index))) };
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/iter.rs:140:19
    |
140 |           let ret = unsafe {
    |  ___________________^
141 | |             let GenericArrayIter {
142 | |                 ref array,
143 | |                 ref mut index,
...   |
155 | |             })
156 | |         };
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/iter.rs:182:13
    |
182 | /             unsafe {
183 | |                 ptr::drop_in_place(p);
184 | |             }
    | |_____________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/iter.rs:205:13
    |
205 |             unsafe { Some(ptr::read(self.array.get_unchecked(self.index_back))) }
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/iter.rs:215:19
    |
215 |           let ret = unsafe {
    |  ___________________^
216 | |             let GenericArrayIter {
217 | |                 ref array,
218 | |                 index,
...   |
230 | |             })
231 | |         };
    | |_________^

warning: declaration of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:12:1
   |
12 | / pub unsafe trait GenericSequence<T>: Sized + IntoIterator {
13 | |     /// `GenericArray` associated length
14 | |     type Length: ArrayLength<T>;
15 | |
...  |
66 | |     }
67 | | }
   | |_^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:40:9
   |
40 | /         unsafe {
41 | |             let mut left = ArrayConsumer::new(lhs);
42 | |
43 | |             let (left_array_iter, left_position) = left.iter_position();
...  |
53 | |             ))
54 | |         }
   | |_________^

warning: implementation of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:75:1
   |
75 | / unsafe impl<'a, T: 'a, S: GenericSequence<T>> GenericSequence<T> for &'a S
76 | | where
77 | |     &'a S: IntoIterator,
78 | | {
...  |
88 | |     }
89 | | }
   | |_^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:91:1
    |
91  | / unsafe impl<'a, T: 'a, S: GenericSequence<T>> GenericSequence<T> for &'a mut S
92  | | where
93  | |     &'a mut S: IntoIterator,
94  | | {
...   |
104 | |     }
105 | | }
    | |_^

warning: declaration of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:111:1
    |
111 | / pub unsafe trait Lengthen<T>: Sized + GenericSequence<T> {
112 | |     /// `GenericSequence` that has one more element than `Self`
113 | |     type Longer: Shorten<T, Shorter = Self>;
114 | |
...   |
145 | |     fn prepend(self, first: T) -> Self::Longer;
146 | | }
    | |_^

warning: declaration of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:152:1
    |
152 | / pub unsafe trait Shorten<T>: Sized + GenericSequence<T> {
153 | |     /// `GenericSequence` that has one less element than `Self`
154 | |     type Shorter: Lengthen<T, Longer = Self>;
155 | |
...   |
187 | |     fn pop_front(self) -> (T, Self::Shorter);
188 | | }
    | |_^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:190:1
    |
190 | / unsafe impl<T, N: ArrayLength<T>> Lengthen<T> for GenericArray<T, N>
191 | | where
192 | |     N: Add<B1>,
193 | |     Add1<N>: ArrayLength<T>,
...   |
229 | |     }
230 | | }
    | |_^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:205:9
    |
205 | /         unsafe {
206 | |             // write self first
207 | |             ptr::write(out_ptr, self);
208 | |             // increment past self, then write the last
...   |
211 | |             longer.assume_init()
212 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:221:9
    |
221 | /         unsafe {
222 | |             // write the first at the start
223 | |             ptr::write(out_ptr, first);
224 | |             // increment past the first, then write self
...   |
227 | |             longer.assume_init()
228 | |         }
    | |_________^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:232:1
    |
232 | / unsafe impl<T, N: ArrayLength<T>> Shorten<T> for GenericArray<T, N>
233 | | where
234 | |     N: Sub<B1>,
235 | |     Sub1<N>: ArrayLength<T>,
...   |
262 | |     }
263 | | }
    | |_^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:244:9
    |
244 | /         unsafe {
245 | |             let init = ptr::read(whole.as_ptr() as _);
246 | |             let last = ptr::read(whole.as_ptr().add(Sub1::<N>::USIZE) as _);
247 | |
248 | |             (init, last)
249 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:256:9
    |
256 | /         unsafe {
257 | |             let head = ptr::read(whole.as_ptr() as _);
258 | |             let tail = ptr::read(whole.as_ptr().offset(1) as _);
259 | |
260 | |             (head, tail)
261 | |         }
    | |_________^

warning: declaration of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:266:1
    |
266 | / pub unsafe trait Split<T, K>: GenericSequence<T>
267 | | where
268 | |     K: ArrayLength<T>,
269 | | {
...   |
276 | |     fn split(self) -> (Self::First, Self::Second);
277 | | }
    | |_^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:279:1
    |
279 | / unsafe impl<T, N, K> Split<T, K> for GenericArray<T, N>
280 | | where
281 | |     N: ArrayLength<T>,
282 | |     K: ArrayLength<T>,
...   |
299 | |     }
300 | | }
    | |_^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:290:9
    |
290 | /         unsafe {
291 | |             // ensure this doesn't get dropped
292 | |             let whole = ManuallyDrop::new(self);
293 | |
...   |
297 | |             (head, tail)
298 | |         }
    | |_________^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:302:1
    |
302 | / unsafe impl<'a, T, N, K> Split<T, K> for &'a GenericArray<T, N>
303 | | where
304 | |     N: ArrayLength<T>,
305 | |     K: ArrayLength<T> + 'static,
...   |
319 | |     }
320 | | }
    | |_^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:313:9
    |
313 | /         unsafe {
314 | |             let ptr_to_first: *const T = self.as_ptr();
315 | |             let head = &*(ptr_to_first as *const _);
316 | |             let tail = &*(ptr_to_first.add(K::USIZE) as *const _);
317 | |             (head, tail)
318 | |         }
    | |_________^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:322:1
    |
322 | / unsafe impl<'a, T, N, K> Split<T, K> for &'a mut GenericArray<T, N>
323 | | where
324 | |     N: ArrayLength<T>,
325 | |     K: ArrayLength<T> + 'static,
...   |
339 | |     }
340 | | }
    | |_^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:333:9
    |
333 | /         unsafe {
334 | |             let ptr_to_first: *mut T = self.as_mut_ptr();
335 | |             let head = &mut *(ptr_to_first as *mut _);
336 | |             let tail = &mut *(ptr_to_first.add(K::USIZE) as *mut _);
337 | |             (head, tail)
338 | |         }
    | |_________^

warning: declaration of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:343:1
    |
343 | / pub unsafe trait Concat<T, M>: GenericSequence<T>
344 | | where
345 | |     M: ArrayLength<T>,
346 | | {
...   |
354 | |     fn concat(self, rest: Self::Rest) -> Self::Output;
355 | | }
    | |_^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:357:1
    |
357 | / unsafe impl<T, N, M> Concat<T, M> for GenericArray<T, N>
358 | | where
359 | |     N: ArrayLength<T> + Add<M>,
360 | |     M: ArrayLength<T>,
...   |
379 | |     }
380 | | }
    | |_^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/sequence.rs:371:9
    |
371 | /         unsafe {
372 | |             // write all of self to the pointer
373 | |             ptr::write(out_ptr, self);
374 | |             // increment past self, then write the rest
...   |
377 | |             output.assume_init()
378 | |         }
    | |_________^

warning: declaration of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:112:1
    |
112 | / pub unsafe trait ArrayLength<T>: Unsigned {
113 | |     /// Associated type representing the array type for the number
114 | |     type ArrayType;
115 | | }
    | |_^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:117:1
    |
117 | / unsafe impl<T> ArrayLength<T> for UTerm {
118 | |     #[doc(hidden)]
119 | |     type ArrayType = [T; 0];
120 | | }
    | |_^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:166:1
    |
166 | / unsafe impl<T, N: ArrayLength<T>> ArrayLength<T> for UInt<N, B0> {
167 | |     #[doc(hidden)]
168 | |     type ArrayType = GenericArrayImplEven<T, N::ArrayType>;
169 | | }
    | |_^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:171:1
    |
171 | / unsafe impl<T, N: ArrayLength<T>> ArrayLength<T> for UInt<N, B1> {
172 | |     #[doc(hidden)]
173 | |     type ArrayType = GenericArrayImplOdd<T, N::ArrayType>;
174 | | }
    | |_^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:183:1
    |
183 | unsafe impl<T: Send, N: ArrayLength<T>> Send for GenericArray<T, N> {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:184:1
    |
184 | unsafe impl<T: Sync, N: ArrayLength<T>> Sync for GenericArray<T, N> {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:194:9
    |
194 |         unsafe { slice::from_raw_parts(self as *const Self as *const T, N::USIZE) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:204:9
    |
204 |         unsafe { slice::from_raw_parts_mut(self as *mut Self as *mut T, N::USIZE) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:222:5
    |
222 | /     pub unsafe fn new() -> ArrayBuilder<T, N> {
223 | |         ArrayBuilder {
224 | |             array: MaybeUninit::uninit(),
225 | |             position: 0,
226 | |         }
227 | |     }
    | |_____^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:235:5
    |
235 | /     pub unsafe fn iter_position(&mut self) -> (slice::IterMut<T>, &mut usize) {
236 | |         ((&mut *self.array.as_mut_ptr()).iter_mut(), &mut self.position)
237 | |     }
    | |_____^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:243:5
    |
243 | /     pub unsafe fn into_inner(self) -> GenericArray<T, N> {
244 | |         let array = ptr::read(&self.array);
245 | |
246 | |         mem::forget(self);
247 | |
248 | |         array.assume_init()
249 | |     }
    | |_____^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:255:13
    |
255 | /             unsafe {
256 | |                 for value in &mut (&mut *self.array.as_mut_ptr())[..self.position] {
257 | |                     ptr::drop_in_place(value);
258 | |                 }
259 | |             }
    | |_____________^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:277:5
    |
277 | /     pub unsafe fn new(array: GenericArray<T, N>) -> ArrayConsumer<T, N> {
278 | |         ArrayConsumer {
279 | |             array: ManuallyDrop::new(array),
280 | |             position: 0,
281 | |         }
282 | |     }
    | |_____^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:290:5
    |
290 | /     pub unsafe fn iter_position(&mut self) -> (slice::Iter<T>, &mut usize) {
291 | |         (self.array.iter(), &mut self.position)
292 | |     }
    | |_____^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:299:17
    |
299 | /                 unsafe {
300 | |                     ptr::drop_in_place(value);
301 | |                 }
    | |_________________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:339:9
    |
339 | /         unsafe {
340 | |             let mut destination = ArrayBuilder::new();
341 | |
342 | |             {
...   |
358 | |             destination.into_inner()
359 | |         }
    | |_________^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:372:1
    |
372 | / unsafe impl<T, N> GenericSequence<T> for GenericArray<T, N>
373 | | where
374 | |     N: ArrayLength<T>,
375 | |     Self: IntoIterator<Item = T>,
...   |
458 | |     }
459 | | }
    | |_^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:384:9
    |
384 | /         unsafe {
385 | |             let mut destination = ArrayBuilder::new();
386 | |
387 | |             {
...   |
397 | |             destination.into_inner()
398 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:414:9
    |
414 | /         unsafe {
415 | |             let mut left = ArrayConsumer::new(lhs);
416 | |             let mut right = ArrayConsumer::new(self);
417 | |
...   |
429 | |             }))
430 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:441:9
    |
441 | /         unsafe {
442 | |             let mut right = ArrayConsumer::new(self);
443 | |
444 | |             let (right_array_iter, right_position) = right.iter_position();
...   |
456 | |             )
457 | |         }
    | |_________^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:461:1
    |
461 | / unsafe impl<T, U, N> MappedGenericSequence<T, U> for GenericArray<T, N>
462 | | where
463 | |     N: ArrayLength<T> + ArrayLength<U>,
464 | |     GenericArray<U, N>: GenericSequence<U, Length = N>,
465 | | {
466 | |     type Mapped = GenericArray<U, N>;
467 | | }
    | |_^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:469:1
    |
469 | / unsafe impl<T, N> FunctionalSequence<T> for GenericArray<T, N>
470 | | where
471 | |     N: ArrayLength<T>,
472 | |     Self: GenericSequence<T, Item = T, Length = N>,
...   |
524 | |     }
525 | | }
    | |_^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:480:9
    |
480 | /         unsafe {
481 | |             let mut source = ArrayConsumer::new(self);
482 | |
483 | |             let (array_iter, position) = source.iter_position();
...   |
491 | |             }))
492 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:511:9
    |
511 | /         unsafe {
512 | |             let mut source = ArrayConsumer::new(self);
513 | |
514 | |             let (array_iter, position) = source.iter_position();
...   |
522 | |             })
523 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:574:9
    |
574 |         unsafe { &*(slice.as_ptr() as *const GenericArray<T, N>) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:588:9
    |
588 |         unsafe { &mut *(slice.as_mut_ptr() as *mut GenericArray<T, N>) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:621:9
    |
621 | /         unsafe {
622 | |             let mut destination = ArrayBuilder::new();
623 | |
624 | |             {
...   |
644 | |             Some(destination.into_inner())
645 | |         }
    | |_________^

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs:653:1
    |
653 | / pub unsafe fn transmute<A, B>(a: A) -> B {
654 | |     let a = ManuallyDrop::new(a);
655 | |     ::core::ptr::read(&*a as *const A as *const B)
656 | | }
    | |_^

       Fresh toml_datetime v0.6.6
       Fresh indexmap v1.9.3
       Fresh cranelift-entity v0.95.1
warning: implementation of an `unsafe` method
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cranelift-entity-0.95.1/src/boxed_slice.rs:34:5
   |
34 | /     pub unsafe fn from_raw(raw: *mut [V]) -> Self {
35 | |         Self {
36 | |             elems: Box::from_raw(raw),
37 | |             unused: PhantomData,
38 | |         }
39 | |     }
   | |_____^
   |
   = note: requested on the command line with `-F unsafe-code`

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cranelift-entity-0.95.1/src/primary.rs:158:9
    |
158 |         unsafe { BoxedSlice::<K, V>::from_raw(Box::<[V]>::into_raw(self.elems.into_boxed_slice())) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

   Compiling wasmtime-runtime v8.0.1
       Fresh regex-automata v0.4.7
       Fresh sp-debug-derive v14.0.0 (https://github.com/paritytech/polkadot-sdk?branch=release-crates-io-v1.7.0#e046d3b2)
       Fresh file-guard v0.2.0
       Fresh wasmtime-jit-debug v8.0.1
warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/wasmtime-jit-debug-8.0.1/src/gdb_jit_int.rs:63:9
   |
63 | /         unsafe {
64 | |             register_gdb_jit_image(&mut *entry);
65 | |         }
   | |_________^
   |
   = note: requested on the command line with `-F unsafe-code`

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/wasmtime-jit-debug-8.0.1/src/gdb_jit_int.rs:78:9
   |
78 | /         unsafe {
79 | |             unregister_gdb_jit_image(&mut *self.entry);
80 | |         }
   | |_________^

warning: implementation of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/wasmtime-jit-debug-8.0.1/src/gdb_jit_int.rs:84:1
   |
84 | unsafe impl Send for GdbJitImageRegistration {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/wasmtime-jit-debug-8.0.1/src/gdb_jit_int.rs:85:1
   |
85 | unsafe impl Sync for GdbJitImageRegistration {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/wasmtime-jit-debug-8.0.1/src/gdb_jit_int.rs:87:1
    |
87  | / unsafe fn register_gdb_jit_image(entry: *mut JITCodeEntry) {
88  | |     let _lock = GDB_REGISTRATION.lock().unwrap();
89  | |     let desc = &mut *wasmtime_jit_debug_descriptor();
90  | |
...   |
104 | |     desc.relevant_entry = ptr::null_mut();
105 | | }
    | |_^

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/wasmtime-jit-debug-8.0.1/src/gdb_jit_int.rs:107:1
    |
107 | / unsafe fn unregister_gdb_jit_image(entry: *mut JITCodeEntry) {
108 | |     let _lock = GDB_REGISTRATION.lock().unwrap();
109 | |     let desc = &mut *wasmtime_jit_debug_descriptor();
110 | |
...   |
127 | |     desc.relevant_entry = ptr::null_mut();
128 | | }
    | |_^

       Fresh wasmtime-asm-macros v8.0.1
       Fresh regex-syntax v0.6.29
       Fresh lazy_static v1.4.0
warning: `generic-array` (lib) generated 80 warnings
warning: `cranelift-entity` (lib) generated 2 warnings
     Running `/home/antonio/Developer/kilt-node/target/debug/build/wasmtime-runtime-49c15dd8a423a208/build-script-build`
warning: `wasmtime-jit-debug` (lib) generated 6 warnings
       Fresh toml_edit v0.21.1
warning: use of deprecated function `winnow::combinator::separated1`: Replaced with `combinator::separated`
 --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/array.rs:4:25
  |
4 | use winnow::combinator::separated1;
  |                         ^^^^^^^^^^
  |
  = note: `#[warn(deprecated)]` on by default

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
 --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/array.rs:5:20
  |
5 | use winnow::trace::trace;
  |                    ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/array.rs:17:5
   |
17 |     trace("array", move |input: &mut Input<'i>| {
   |     ^^^^^

warning: use of deprecated function `winnow::combinator::separated1`: Replaced with `combinator::separated`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/array.rs:48:18
   |
48 |                 (separated1(array_value(check), ARRAY_SEP), opt(ARRAY_SEP)).map(
   |                  ^^^^^^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/datetime.rs:15:20
   |
15 | use winnow::trace::trace;
   |                    ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/datetime.rs:26:5
   |
26 |     trace(
   |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/datetime.rs:57:5
   |
57 |     trace("full-date", full_date_).parse_next(input)
   |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/datetime.rs:90:5
   |
90 |     trace(
   |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/datetime.rs:110:5
    |
110 |     trace(
    |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/document.rs:10:20
   |
10 | use winnow::trace::trace;
   |                    ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/document.rs:106:5
    |
106 |     trace(
    |     ^^^^^

warning: use of deprecated function `winnow::combinator::separated0`: Replaced with `combinator::separated`
 --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/inline_table.rs:3:25
  |
3 | use winnow::combinator::separated0;
  |                         ^^^^^^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
 --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/inline_table.rs:5:20
  |
5 | use winnow::trace::trace;
  |                    ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/inline_table.rs:24:5
   |
24 |     trace("inline-table", move |input: &mut Input<'i>| {
   |     ^^^^^

warning: use of deprecated function `winnow::combinator::separated0`: Replaced with `combinator::separated`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/inline_table.rs:127:13
    |
127 |             separated0(keyval(check), INLINE_TABLE_SEP),
    |             ^^^^^^^^^^

warning: use of deprecated function `winnow::combinator::separated1`: Replaced with `combinator::separated`
 --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/key.rs:4:25
  |
4 | use winnow::combinator::separated1;
  |                         ^^^^^^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
 --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/key.rs:7:20
  |
7 | use winnow::trace::trace;
  |                    ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/key.rs:21:5
   |
21 |     trace(
   |     ^^^^^

warning: use of deprecated function `winnow::combinator::separated1`: Replaced with `combinator::separated`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/key.rs:23:9
   |
23 |         separated1(
   |         ^^^^^^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/key.rs:47:5
   |
47 |     trace(
   |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/key.rs:66:5
   |
66 |     trace(
   |     ^^^^^

warning: use of deprecated function `winnow::token::tag`: Replaced with `literal`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/numbers.rs:11:20
   |
11 | use winnow::token::tag;
   |                    ^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/numbers.rs:13:20
   |
13 | use winnow::trace::trace;
   |                    ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/numbers.rs:23:5
   |
23 |     trace("boolean", alt((true_, false_))).parse_next(input)
   |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/numbers.rs:42:5
   |
42 |     trace("integer",
   |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/numbers.rs:56:5
   |
56 |     trace(
   |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/numbers.rs:95:5
   |
95 |     trace(
   |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/numbers.rs:128:5
    |
128 |     trace(
    |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/numbers.rs:162:5
    |
162 |     trace(
    |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/numbers.rs:199:5
    |
199 |     trace(
    |     ^^^^^

warning: use of deprecated function `winnow::token::tag`: Replaced with `literal`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/numbers.rs:299:5
    |
299 |     tag(INF).value(f64::INFINITY).parse_next(input)
    |     ^^^

warning: use of deprecated function `winnow::token::tag`: Replaced with `literal`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/numbers.rs:304:5
    |
304 |     tag(NAN).value(f64::NAN.copysign(1.0)).parse_next(input)
    |     ^^^

warning: use of deprecated function `winnow::combinator::success`: Replaced with empty.value(...)`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:13:25
   |
13 | use winnow::combinator::success;
   |                         ^^^^^^^

warning: use of deprecated function `winnow::token::tag`: Replaced with `literal`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:20:20
   |
20 | use winnow::token::tag;
   |                    ^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:22:20
   |
22 | use winnow::trace::trace;
   |                    ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:33:5
   |
33 |     trace(
   |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:49:5
   |
49 |     trace("basic-string", |input: &mut Input<'i>| {
   |     ^^^^^

warning: use of deprecated function `winnow::combinator::success`: Replaced with empty.value(...)`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:113:17
    |
113 |         b'b' => success('\u{8}'),
    |                 ^^^^^^^

warning: use of deprecated function `winnow::combinator::success`: Replaced with empty.value(...)`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:114:17
    |
114 |         b'f' => success('\u{c}'),
    |                 ^^^^^^^

warning: use of deprecated function `winnow::combinator::success`: Replaced with empty.value(...)`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:115:17
    |
115 |         b'n' => success('\n'),
    |                 ^^^^^^^

warning: use of deprecated function `winnow::combinator::success`: Replaced with empty.value(...)`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:116:17
    |
116 |         b'r' => success('\r'),
    |                 ^^^^^^^

warning: use of deprecated function `winnow::combinator::success`: Replaced with empty.value(...)`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:117:17
    |
117 |         b't' => success('\t'),
    |                 ^^^^^^^

warning: use of deprecated function `winnow::combinator::success`: Replaced with empty.value(...)`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:120:18
    |
120 |         b'\\' => success('\\'),
    |                  ^^^^^^^

warning: use of deprecated function `winnow::combinator::success`: Replaced with empty.value(...)`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:121:17
    |
121 |         b'"' => success('"'),
    |                 ^^^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:153:5
    |
153 |     trace(
    |     ^^^^^

warning: use of deprecated function `winnow::token::tag`: Replaced with `literal`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:190:38
    |
190 |     if let Some(qi) = opt(mlb_quotes(tag(ML_BASIC_STRING_DELIM).value(()))).parse_next(input)? {
    |                                      ^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:261:5
    |
261 |     trace(
    |     ^^^^^

warning: use of deprecated function `winnow::trace::trace`: Replaced with `winnow::combinator::trace`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:290:5
    |
290 |     trace(
    |     ^^^^^

warning: use of deprecated function `winnow::token::tag`: Replaced with `literal`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/toml_edit-0.21.1/src/parser/strings.rs:323:24
    |
323 |         opt(mll_quotes(tag(ML_LITERAL_STRING_DELIM).value(()))),
    |                        ^^^

       Fresh crypto-common v0.1.6
       Fresh block-buffer v0.10.4
warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/block-buffer-0.10.4/src/sealed.rs:27:9
   |
27 | /         unsafe {
28 | |             let blocks_ptr = data.as_ptr() as *const Block<N>;
29 | |             let tail_ptr = data.as_ptr().add(blocks_len);
30 | |             (
...  |
33 | |             )
34 | |         }
   | |_________^
   |
   = note: requested on the command line with `-F unsafe-code`

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/block-buffer-0.10.4/src/sealed.rs:58:9
   |
58 | /         unsafe {
59 | |             let blocks_ptr = data.as_ptr() as *const Block<N>;
60 | |             let tail_ptr = data.as_ptr().add(blocks_len);
61 | |             (
...  |
64 | |             )
65 | |         }
   | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/block-buffer-0.10.4/src/lib.rs:200:13
    |
200 | /             unsafe {
201 | |                 core::hint::unreachable_unchecked();
202 | |             }
    | |_____________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/block-buffer-0.10.4/src/lib.rs:348:18
    |
348 |     let blocks = unsafe { slice::from_raw_parts_mut(p, nb) };
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

       Fresh digest v0.9.0
       Fresh wasmparser v0.102.0
warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/wasmparser-0.102.0/src/validator/types.rs:62:9
   |
62 |         unsafe { std::mem::transmute::<_, &Self>(s.as_ref()) }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-F unsafe-code`

       Fresh gimli v0.27.3
warning: declaration of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gimli-0.27.3/src/read/util.rs:14:5
   |
14 | /     pub unsafe trait Sealed {
15 | |         type Storage;
16 | |
17 | |         fn new_storage() -> Self::Storage;
...  |
21 | |         }
22 | |     }
   | |_____^
   |
   = note: requested on the command line with `-F unsafe-code`

warning: implementation of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gimli-0.27.3/src/read/util.rs:49:9
   |
49 | /         unsafe impl<T> Sealed for [T; $n] {
50 | |             type Storage = [MaybeUninit<T>; $n];
51 | |
52 | |             fn new_storage() -> Self::Storage {
...  |
55 | |             }
56 | |         }
   | |_________^
...
74 |   impl_array!(0 1 2 3 4 8 16 32 64 128 192);
   |   ----------------------------------------- in this macro invocation
   |
   = note: this warning originates in the macro `impl_array` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gimli-0.27.3/src/read/util.rs:54:17
   |
54 |                 unsafe { MaybeUninit::uninit().assume_init() }
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
74 | impl_array!(0 1 2 3 4 8 16 32 64 128 192);
   | ----------------------------------------- in this macro invocation
   |
   = note: this warning originates in the macro `impl_array` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: implementation of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gimli-0.27.3/src/read/util.rs:77:1
   |
77 | / unsafe impl<T> Sealed for Vec<T> {
78 | |     type Storage = Box<[MaybeUninit<T>]>;
79 | |
80 | |     fn new_storage() -> Self::Storage {
...  |
91 | |     }
92 | | }
   | |_^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gimli-0.27.3/src/read/util.rs:88:9
   |
88 |         unsafe { vec.set_len(vec.capacity()) };
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gimli-0.27.3/src/read/util.rs:125:9
    |
125 |         unsafe { ptr::drop_in_place(ptr) };
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gimli-0.27.3/src/read/util.rs:150:9
    |
150 | /         unsafe {
151 | |             let p = storage.as_mut_ptr().add(index);
152 | |             core::ptr::copy(p as *const _, p.add(1), self.len - index);
153 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gimli-0.27.3/src/read/util.rs:165:18
    |
165 |             Some(unsafe { A::as_slice(&self.storage)[self.len].as_ptr().read() })
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gimli-0.27.3/src/read/util.rs:184:9
    |
184 |         unsafe { Vec::from_raw_parts(slice.as_mut_ptr() as *mut T, len, slice.len()) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gimli-0.27.3/src/read/util.rs:207:9
    |
207 |         unsafe { slice::from_raw_parts(slice.as_ptr() as _, self.len) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gimli-0.27.3/src/read/util.rs:216:9
    |
216 |         unsafe { slice::from_raw_parts_mut(slice.as_mut_ptr() as _, self.len) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

       Fresh expander v2.2.1
       Fresh regex-automata v0.1.10
       Fresh block-buffer v0.9.0
warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/block-buffer-0.9.0/src/lib.rs:75:22
   |
75 |           let blocks = unsafe {
   |  ______________________^
76 | |             slice::from_raw_parts(
77 | |                 left.as_ptr() as *const GenericArray<u8, BlockSize>,
78 | |                 n_blocks,
79 | |             )
80 | |         };
   | |_________^
   |
   = note: requested on the command line with `-F unsafe-code`

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/block-buffer-0.9.0/src/lib.rs:230:5
    |
230 | /     unsafe {
231 | |         core::ptr::write_bytes(dst.as_mut_ptr(), 0, dst.len());
232 | |     }
    | |_____^

       Fresh cpp_demangle v0.3.5
       Fresh regex v1.10.5
       Fresh bincode v1.3.3
warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:24:9
   |
24 | /         unsafe {
25 | |             copy_nonoverlapping($src.as_ptr(), &mut data as *mut $ty as *mut u8, $size);
26 | |         }
   | |_________^
...
45 |           read_num_bytes!(u16, 2, buf, to_le)
   |           ----------------------------------- in this macro invocation
   |
   = note: requested on the command line with `-F unsafe-code`
   = note: this warning originates in the macro `read_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:24:9
   |
24 | /         unsafe {
25 | |             copy_nonoverlapping($src.as_ptr(), &mut data as *mut $ty as *mut u8, $size);
26 | |         }
   | |_________^
...
50 |           read_num_bytes!(u32, 4, buf, to_le)
   |           ----------------------------------- in this macro invocation
   |
   = note: this warning originates in the macro `read_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:24:9
   |
24 | /         unsafe {
25 | |             copy_nonoverlapping($src.as_ptr(), &mut data as *mut $ty as *mut u8, $size);
26 | |         }
   | |_________^
...
55 |           read_num_bytes!(u64, 8, buf, to_le)
   |           ----------------------------------- in this macro invocation
   |
   = note: this warning originates in the macro `read_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:34:9
   |
34 | /         unsafe {
35 | |             // N.B. https://github.com/rust-lang/rust/issues/22776
36 | |             let bytes = *(&$n.$which() as *const _ as *const [u8; $size]);
37 | |             copy_nonoverlapping((&bytes).as_ptr(), $dst.as_mut_ptr(), $size);
38 | |         }
   | |_________^
...
60 |           write_num_bytes!(u16, 2, n, buf, to_le);
   |           --------------------------------------- in this macro invocation
   |
   = note: this warning originates in the macro `write_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:34:9
   |
34 | /         unsafe {
35 | |             // N.B. https://github.com/rust-lang/rust/issues/22776
36 | |             let bytes = *(&$n.$which() as *const _ as *const [u8; $size]);
37 | |             copy_nonoverlapping((&bytes).as_ptr(), $dst.as_mut_ptr(), $size);
38 | |         }
   | |_________^
...
65 |           write_num_bytes!(u32, 4, n, buf, to_le);
   |           --------------------------------------- in this macro invocation
   |
   = note: this warning originates in the macro `write_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:34:9
   |
34 | /         unsafe {
35 | |             // N.B. https://github.com/rust-lang/rust/issues/22776
36 | |             let bytes = *(&$n.$which() as *const _ as *const [u8; $size]);
37 | |             copy_nonoverlapping((&bytes).as_ptr(), $dst.as_mut_ptr(), $size);
38 | |         }
   | |_________^
...
70 |           write_num_bytes!(u64, 8, n, buf, to_le);
   |           --------------------------------------- in this macro invocation
   |
   = note: this warning originates in the macro `write_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:34:9
   |
34 | /         unsafe {
35 | |             // N.B. https://github.com/rust-lang/rust/issues/22776
36 | |             let bytes = *(&$n.$which() as *const _ as *const [u8; $size]);
37 | |             copy_nonoverlapping((&bytes).as_ptr(), $dst.as_mut_ptr(), $size);
38 | |         }
   | |_________^
...
76 |               write_num_bytes!(u128, 16, n, buf, to_le);
   |               ----------------------------------------- in this macro invocation
   |
   = note: this warning originates in the macro `write_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:24:9
   |
24 | /         unsafe {
25 | |             copy_nonoverlapping($src.as_ptr(), &mut data as *mut $ty as *mut u8, $size);
26 | |         }
   | |_________^
...
81 |               read_num_bytes!(u128, 16, buf, to_le)
   |               ------------------------------------- in this macro invocation
   |
   = note: this warning originates in the macro `read_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:24:9
   |
24 | /         unsafe {
25 | |             copy_nonoverlapping($src.as_ptr(), &mut data as *mut $ty as *mut u8, $size);
26 | |         }
   | |_________^
...
89 |           read_num_bytes!(u16, 2, buf, to_be)
   |           ----------------------------------- in this macro invocation
   |
   = note: this warning originates in the macro `read_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:24:9
   |
24 | /         unsafe {
25 | |             copy_nonoverlapping($src.as_ptr(), &mut data as *mut $ty as *mut u8, $size);
26 | |         }
   | |_________^
...
94 |           read_num_bytes!(u32, 4, buf, to_be)
   |           ----------------------------------- in this macro invocation
   |
   = note: this warning originates in the macro `read_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:24:9
   |
24 | /         unsafe {
25 | |             copy_nonoverlapping($src.as_ptr(), &mut data as *mut $ty as *mut u8, $size);
26 | |         }
   | |_________^
...
99 |           read_num_bytes!(u64, 8, buf, to_be)
   |           ----------------------------------- in this macro invocation
   |
   = note: this warning originates in the macro `read_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:34:9
    |
34  | /         unsafe {
35  | |             // N.B. https://github.com/rust-lang/rust/issues/22776
36  | |             let bytes = *(&$n.$which() as *const _ as *const [u8; $size]);
37  | |             copy_nonoverlapping((&bytes).as_ptr(), $dst.as_mut_ptr(), $size);
38  | |         }
    | |_________^
...
104 |           write_num_bytes!(u16, 2, n, buf, to_be);
    |           --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `write_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:34:9
    |
34  | /         unsafe {
35  | |             // N.B. https://github.com/rust-lang/rust/issues/22776
36  | |             let bytes = *(&$n.$which() as *const _ as *const [u8; $size]);
37  | |             copy_nonoverlapping((&bytes).as_ptr(), $dst.as_mut_ptr(), $size);
38  | |         }
    | |_________^
...
109 |           write_num_bytes!(u32, 4, n, buf, to_be);
    |           --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `write_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:34:9
    |
34  | /         unsafe {
35  | |             // N.B. https://github.com/rust-lang/rust/issues/22776
36  | |             let bytes = *(&$n.$which() as *const _ as *const [u8; $size]);
37  | |             copy_nonoverlapping((&bytes).as_ptr(), $dst.as_mut_ptr(), $size);
38  | |         }
    | |_________^
...
114 |           write_num_bytes!(u64, 8, n, buf, to_be);
    |           --------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `write_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:34:9
    |
34  | /         unsafe {
35  | |             // N.B. https://github.com/rust-lang/rust/issues/22776
36  | |             let bytes = *(&$n.$which() as *const _ as *const [u8; $size]);
37  | |             copy_nonoverlapping((&bytes).as_ptr(), $dst.as_mut_ptr(), $size);
38  | |         }
    | |_________^
...
120 |               write_num_bytes!(u128, 16, n, buf, to_be);
    |               ----------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `write_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:24:9
    |
24  | /         unsafe {
25  | |             copy_nonoverlapping($src.as_ptr(), &mut data as *mut $ty as *mut u8, $size);
26  | |         }
    | |_________^
...
125 |               read_num_bytes!(u128, 16, buf, to_be)
    |               ------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `read_num_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:160:9
    |
160 |         unsafe { *(&Self::read_u32(buf) as *const u32 as *const f32) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:165:9
    |
165 |         unsafe { *(&Self::read_u64(buf) as *const u64 as *const f64) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:185:17
    |
185 |         let n = unsafe { *(&n as *const f32 as *const u32) };
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/byteorder.rs:191:17
    |
191 |         let n = unsafe { *(&n as *const f64 as *const u64) };
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

       Fresh impl-serde v0.4.0
warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/impl-serde-0.4.0/src/serialize.rs:62:2
   |
62 |     unsafe { core::str::from_utf8_unchecked(&v[0..idx]) }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-F unsafe-code`

       Fresh ref-cast-impl v1.0.23
error: the wasm*-unknown-unknown targets are not supported by default, you may need to enable the "js" feature. For more information see: https://docs.rs/getrandom/#webassembly-support
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lib.rs:342:9
    |
342 | /         compile_error!("the wasm*-unknown-unknown targets are not supported by \
343 | |                         default, you may need to enable the \"js\" feature. \
344 | |                         For more information see: \
345 | |                         https://docs.rs/getrandom/#webassembly-support");
    | |________________________________________________________________________^

[wasmtime-runtime 8.0.1] cargo:rerun-if-changed=src/helpers.c
[wasmtime-runtime 8.0.1] TARGET = Some("wasm32-unknown-unknown")
[wasmtime-runtime 8.0.1] OPT_LEVEL = Some("0")
[wasmtime-runtime 8.0.1] HOST = Some("x86_64-unknown-linux-gnu")
[wasmtime-runtime 8.0.1] cargo:rerun-if-env-changed=CC_wasm32-unknown-unknown
[wasmtime-runtime 8.0.1] CC_wasm32-unknown-unknown = None
[wasmtime-runtime 8.0.1] cargo:rerun-if-env-changed=CC_wasm32_unknown_unknown
[wasmtime-runtime 8.0.1] CC_wasm32_unknown_unknown = None
[wasmtime-runtime 8.0.1] cargo:rerun-if-env-changed=TARGET_CC
[wasmtime-runtime 8.0.1] TARGET_CC = None
[wasmtime-runtime 8.0.1] cargo:rerun-if-env-changed=CC
[wasmtime-runtime 8.0.1] CC = None
[wasmtime-runtime 8.0.1] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
warning: `toml_edit` (lib) generated 49 warnings
warning: `block-buffer` (lib) generated 4 warnings
warning: `wasmparser` (lib) generated 1 warning
warning: `gimli` (lib) generated 31 warnings (20 duplicates)
warning: cargo:rustc-check-cfg requires -Zcheck-cfg=output flag
warning: cargo:rustc-check-cfg requires -Zcheck-cfg=output flag
warning: cargo:rustc-check-cfg requires -Zcheck-cfg=output flag
warning: cargo:rustc-check-cfg requires -Zcheck-cfg=output flag
warning: `block-buffer` (lib) generated 2 warnings
warning: `bincode` (lib) generated 20 warnings
warning: `impl-serde` (lib) generated 1 warning
   Compiling proc-macro-crate v3.1.0
    Checking digest v0.10.7
    Checking wasmtime-types v8.0.1
    Checking addr2line v0.19.0
       Fresh tracing-attributes v0.1.27
warning: lint `private_in_public` has been removed: replaced with another group of lints, see RFC <https://rust-lang.github.io/rfcs/2145-type-privacy.html> for more information
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tracing-attributes-0.1.27/src/lib.rs:73:5
   |
73 |     private_in_public,
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(renamed_and_removed_lints)]` on by default

       Fresh wasmtime-jit-icache-coherence v8.0.1
       Fresh ryu v1.0.18
       Fresh futures-core v0.3.31
       Fresh itoa v1.0.11
       Fresh opaque-debug v0.3.1
       Fresh hex v0.4.3
       Fresh rustc-hex v2.1.0
       Fresh cfg-if v1.0.0
       Fresh futures-sink v0.3.31
       Fresh slab v0.4.9
       Fresh matchers v0.0.1
warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/matchers-0.0.1/src/lib.rs:182:22
    |
182 |           self.state = unsafe {
    |  ______________________^
183 | |             // It's safe to call `next_state_unchecked` since the matcher may
184 | |             // only be constructed by a `Pattern`, which, in turn,can only be
185 | |             // constructed with a valid DFA.
186 | |             self.automaton.next_state_unchecked(self.state, input)
187 | |         };
    | |_________^
    |
    = note: requested on the command line with `-F unsafe-code`

       Fresh ref-cast v1.0.23
warning: declaration of an `unsafe` trait
 --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ref-cast-1.0.23/src/custom.rs:3:1
  |
3 | / pub unsafe trait RefCastCustom<From: ?Sized> {
4 | |     type CurrentCrate;
5 | |     fn __static_assert() {}
6 | | }
  | |_^
  |
  = note: requested on the command line with `-F unsafe-code`

warning: declaration of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ref-cast-1.0.23/src/custom.rs:9:1
   |
9  | / pub unsafe trait RefCastOkay<From>: Sealed<From> {
10 | |     type CurrentCrate;
11 | |     type Target: ?Sized;
12 | | }
   | |_^

warning: implementation of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ref-cast-1.0.23/src/custom.rs:14:1
   |
14 | / unsafe impl<'a, From, To> RefCastOkay<&'a From> for &'a To
15 | | where
16 | |     From: ?Sized,
17 | |     To: ?Sized + RefCastCustom<From>,
...  |
20 | |     type Target = To;
21 | | }
   | |_^

warning: implementation of an `unsafe` trait
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ref-cast-1.0.23/src/custom.rs:23:1
   |
23 | / unsafe impl<'a, From, To> RefCastOkay<&'a mut From> for &'a mut To
24 | | where
25 | |     From: ?Sized,
26 | |     To: ?Sized + RefCastCustom<From>,
...  |
29 | |     type Target = To;
30 | | }
   | |_^

       Fresh psm v0.1.21
warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/psm-0.1.21/src/lib.rs:100:1
    |
100 | / unsafe fn rust_psm_replace_stack(
101 | |     data: usize,
102 | |     callback: extern_item!(unsafe fn(usize) -> !),
103 | |     sp: *mut u8,
...   |
106 | |     _rust_psm_replace_stack(data, callback, sp)
107 | | }
    | |_^
    |
    = note: requested on the command line with `-F unsafe-code`

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/psm-0.1.21/src/lib.rs:111:1
    |
111 | / unsafe fn rust_psm_on_stack(
112 | |     data: usize,
113 | |     return_ptr: usize,
114 | |     callback: extern_item!(unsafe fn(usize, usize)),
...   |
118 | |     _rust_psm_on_stack(data, return_ptr, callback, sp)
119 | | }
    | |_^

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/psm-0.1.21/src/lib.rs:181:1
    |
181 | / pub unsafe fn on_stack<R, F: FnOnce() -> R>(base: *mut u8, size: usize, callback: F) -> R {
182 | |     use core::mem::MaybeUninit;
183 | |
184 | |     extern_item! {
...   |
206 | |     return return_value.assume_init();
207 | | }
    | |_^

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/psm-0.1.21/src/lib.rs:17:9
    |
17  |           unsafe extern "C" $($toks)+
    |           ^^^^^^
...
184 | /     extern_item! {
185 | |         unsafe fn with_on_stack<R, F: FnOnce() -> R>(callback_ptr: usize, return_ptr: usize) {
186 | |             let return_ptr = (*(return_ptr as *mut MaybeUninit<R>)).as_mut_ptr();
187 | |             let callback = (*(callback_ptr as *mut MaybeUninit<F>)).as_ptr();
...   |
191 | |         }
192 | |     }
    | |_____- in this macro invocation
    |
    = note: this warning originates in the macro `extern_item` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/psm-0.1.21/src/lib.rs:253:1
    |
253 | / pub unsafe fn replace_stack<F: FnOnce()>(base: *mut u8, size: usize, callback: F) -> ! {
254 | |     extern_item! { unsafe fn with_replaced_stack<F: FnOnce()>(d: usize) -> ! {
255 | |         // Safe to move out, because the closure is essentially forgotten by
256 | |         // this being required to never return...
...   |
269 | |     );
270 | | }
    | |_^

warning: declaration of an `unsafe` function
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/psm-0.1.21/src/lib.rs:17:9
    |
17  |           unsafe extern "C" $($toks)+
    |           ^^^^^^
...
254 | /     extern_item! { unsafe fn with_replaced_stack<F: FnOnce()>(d: usize) -> ! {
255 | |         // Safe to move out, because the closure is essentially forgotten by
256 | |         // this being required to never return...
257 | |         ::core::ptr::read(d as *const F)();
258 | |         ::core::hint::unreachable_unchecked();
259 | |     } }
    | |_______- in this macro invocation
    |
    = note: this warning originates in the macro `extern_item` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/psm-0.1.21/src/lib.rs:288:9
    |
288 | /         unsafe {
289 | |             match rust_psm_stack_direction() {
290 | |                 ASC => StackDirection::Ascending,
291 | |                 DSC => StackDirection::Descending,
292 | |                 _ => ::core::hint::unreachable_unchecked(),
293 | |             }
294 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/psm-0.1.21/src/lib.rs:319:5
    |
319 |     unsafe { rust_psm_stack_pointer() }
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

       Fresh sharded-slab v0.1.7
warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:836:1
    |
836 | / unsafe impl<T, C> Send for Pool<T, C>
837 | | where
838 | |     T: Send + Clear + Default,
839 | |     C: cfg::Config,
840 | | {
841 | | }
    | |_^
    |
    = note: requested on the command line with `-F unsafe-code`

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:842:1
    |
842 | / unsafe impl<T, C> Sync for Pool<T, C>
843 | | where
844 | |     T: Sync + Clear + Default,
845 | |     C: cfg::Config,
846 | | {
847 | | }
    | |_^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:885:9
    |
885 | /         unsafe {
886 | |             // Safety: calling `slot::Guard::value` is unsafe, since the `Guard`
887 | |             // value contains a pointer to the slot that may outlive the slab
888 | |             // containing that slot. Here, the `Ref` has a borrowed reference to
...   |
891 | |             self.inner.value()
892 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:915:28
    |
915 |           let should_clear = unsafe {
    |  ____________________________^
916 | |             // Safety: calling `slot::Guard::release` is unsafe, since the
917 | |             // `Guard` value contains a pointer to the slot that may outlive the
918 | |             // slab containing that slot. Here, the `Ref` guard owns a
...   |
922 | |             self.inner.release()
923 | |         };
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:998:21
    |
998 |         let inner = unsafe { self.inner.downgrade() };
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1008:9
     |
1008 | /         unsafe {
1009 | |             // Safety: we are holding a reference to the shard which keeps the
1010 | |             // pointed slot alive. The returned reference will not outlive
1011 | |             // `self`.
1012 | |             self.inner.value()
1013 | |         }
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1035:9
     |
1035 | /         unsafe {
1036 | |             // Safety: we are holding a reference to the shard which keeps the
1037 | |             // pointed slot alive. The returned reference will not outlive `self`.
1038 | |             self.inner.value_mut()
1039 | |         }
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1050:28
     |
1050 |           let should_clear = unsafe {
     |  ____________________________^
1051 | |             // Safety: we are holding a reference to the shard which keeps the
1052 | |             // pointed slot alive. The returned reference will not outlive `self`.
1053 | |             self.inner.release()
1054 | |         };
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1095:9
     |
1095 | /         unsafe {
1096 | |             // Safety: calling `slot::Guard::value` is unsafe, since the `Guard`
1097 | |             // value contains a pointer to the slot that may outlive the slab
1098 | |             // containing that slot. Here, the `Ref` has a borrowed reference to
...    |
1101 | |             self.inner.value()
1102 | |         }
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1125:28
     |
1125 |           let should_clear = unsafe {
     |  ____________________________^
1126 | |             // Safety: calling `slot::Guard::release` is unsafe, since the
1127 | |             // `Guard` value contains a pointer to the slot that may outlive the
1128 | |             // slab containing that slot. Here, the `OwnedRef` owns an `Arc`
...    |
1131 | |             self.inner.release()
1132 | |         };
     | |_________^

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1166:1
     |
1166 | / unsafe impl<T, C> Sync for OwnedRef<T, C>
1167 | | where
1168 | |     T: Sync + Clear + Default,
1169 | |     C: cfg::Config,
1170 | | {
1171 | | }
     | |_^

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1173:1
     |
1173 | / unsafe impl<T, C> Send for OwnedRef<T, C>
1174 | | where
1175 | |     T: Sync + Clear + Default,
1176 | |     C: cfg::Config,
1177 | | {
1178 | | }
     | |_^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1228:21
     |
1228 |         let inner = unsafe { self.inner.downgrade() };
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1244:9
     |
1244 | /         unsafe {
1245 | |             // Safety: calling `slot::InitGuard::value` is unsafe, since the `Guard`
1246 | |             // value contains a pointer to the slot that may outlive the slab
1247 | |             // containing that slot. Here, the `OwnedRefMut` has an `Arc` clone of
...    |
1250 | |             self.inner.value()
1251 | |         }
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1273:9
     |
1273 | /         unsafe {
1274 | |             // Safety: calling `slot::InitGuard::value_mut` is unsafe, since the
1275 | |             // `Guard`  value contains a pointer to the slot that may outlive
1276 | |             // the slab   containing that slot. Here, the `OwnedRefMut` has an
...    |
1279 | |             self.inner.value_mut()
1280 | |         }
     | |_________^

warning: usage of an `unsafe` block
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1291:28
     |
1291 |           let should_clear = unsafe {
     |  ____________________________^
1292 | |             // Safety: calling `slot::Guard::release` is unsafe, since the
1293 | |             // `Guard` value contains a pointer to the slot that may outlive the
1294 | |             // slab containing that slot. Here, the `OwnedRefMut` owns an `Arc`
...    |
1297 | |             self.inner.release()
1298 | |         };
     | |_________^

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1330:1
     |
1330 | / unsafe impl<T, C> Sync for OwnedRefMut<T, C>
1331 | | where
1332 | |     T: Sync + Clear + Default,
1333 | |     C: cfg::Config,
1334 | | {
1335 | | }
     | |_^

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/pool.rs:1337:1
     |
1337 | / unsafe impl<T, C> Send for OwnedRefMut<T, C>
1338 | | where
1339 | |     T: Sync + Clear + Default,
1340 | |     C: cfg::Config,
1341 | | {
1342 | | }
     | |_^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:91:31
   |
91 |         self.next.with(|next| unsafe { *next })
   |                               ^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:96:31
   |
96 |         self.item.with(|item| unsafe { &*item })
   |                               ^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:101:32
    |
101 |           self.next.with_mut(|n| unsafe {
    |  ________________________________^
102 | |             (*n) = next;
103 | |         })
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:283:59
    |
283 | ...                   .with_mut(|item| mutator(Some(unsafe { &mut *item })));
    |                                                     ^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:342:31
    |
342 |         self.item.with(|item| unsafe { (*item).is_none() })
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:355:9
    |
355 | /         unsafe {
356 | |             // Safety: Accessing the value of an `InitGuard` is unsafe because
357 | |             // it has a pointer to a slot which may dangle. Here, we know the
358 | |             // pointed slot is alive because we have a reference to it in scope,
...   |
361 | |             guard.release();
362 | |         };
    | |_________^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:604:5
    |
604 | /     pub(crate) unsafe fn release(&self) -> bool {
605 | |         self.slot().release()
606 | |     }
    | |_____^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:616:5
    |
616 | /     pub(crate) unsafe fn slot(&self) -> &Slot<T, C> {
617 | |         self.slot.as_ref()
618 | |     }
    | |_____^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:628:5
    |
628 | /     pub(crate) unsafe fn value(&self) -> &T {
629 | |         self.slot().item.with(|item| &*item)
630 | |     }
    | |_____^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:785:5
    |
785 | /     pub(crate) unsafe fn value(&self) -> &T {
786 | |         self.slot.as_ref().item.with(|val| &*val)
787 | |     }
    | |_____^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:800:5
    |
800 | /     pub(crate) unsafe fn value_mut(&mut self) -> &mut T {
801 | |         self.slot.as_ref().item.with_mut(|val| &mut *val)
802 | |     }
    | |_____^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:812:5
    |
812 | /     pub(crate) unsafe fn release(&mut self) -> bool {
813 | |         self.release2(0)
814 | |     }
    | |_____^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:824:5
    |
824 | /     pub(crate) unsafe fn downgrade(&mut self) -> Guard<T, C> {
825 | |         let _ = self.release2(RefCount::<C>::from_usize(1).pack(0));
826 | |         Guard { slot: self.slot }
827 | |     }
    | |_____^

warning: implementation of an `unsafe` method
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/slot.rs:829:5
    |
829 | /     unsafe fn release2(&mut self, new_refs: usize) -> bool {
830 | |         test_println!(
831 | |             "InitGuard::release; curr_lifecycle={:?}; downgrading={}",
832 | |             Lifecycle::<C>::from_packed(self.curr_lifecycle),
...   |
898 | |         }
899 | |     }
    | |_____^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/mod.rs:102:31
    |
102 |         self.head.with(|head| unsafe { *head })
    |                               ^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/mod.rs:107:35
    |
107 |           self.head.with_mut(|head| unsafe {
    |  ___________________________________^
108 | |             *head = new_head;
109 | |         })
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/mod.rs:174:28
    |
174 |         self.slab.with(|s| unsafe { (*s).is_none() })
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/mod.rs:188:24
    |
188 |             let slot = unsafe { &*slab }.as_ref()?.get(poff)?;
    |                        ^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/mod.rs:217:24
    |
217 |             let slab = unsafe { &*slab }.as_ref()?;
    |                        ^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/mod.rs:234:24
    |
234 |             let slab = unsafe { &*slab }.as_ref();
    |                        ^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/mod.rs:250:42
    |
250 |         let slab = self.slab.with(|slab| unsafe { (*slab).as_ref() });
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/mod.rs:278:24
    |
278 |             let slab = unsafe { &*(slab) }
    |                        ^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/mod.rs:304:13
    |
304 | /             unsafe {
305 | |                 *s = Some(slab.into_boxed_slice());
306 | |             }
    | |_____________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/mod.rs:321:24
    |
321 |             let slab = unsafe { &*slab }.as_ref();
    |                        ^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/mod.rs:341:24
    |
341 |             let slab = unsafe { &*slab }.as_ref();
    |                        ^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/page/mod.rs:354:24
    |
354 |             let head = unsafe { *head };
    |                        ^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/shard.rs:316:13
    |
316 | /             unsafe {
317 | |                 // Safety: we just put it there!
318 | |                 &*ptr
319 | |             }
    | |_____________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/shard.rs:343:25
    |
343 |               let shard = unsafe {
    |  _________________________^
344 | |                 // Safety: this is the only place where these boxes are
345 | |                 // deallocated, and we have exclusive access to the shard array,
346 | |                 // because...we are dropping it...
347 | |                 Box::from_raw(ptr)
348 | |             };
    | |_____________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/shard.rs:361:55
    |
361 |                 set.entry(&format_args!("{:p}", ptr), unsafe { shard.as_ref() });
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/shard.rs:386:21
    |
386 |           let track = unsafe {
    |  _____________________^
387 | |             // Safety: The returned reference will have the same lifetime as the
388 | |             // reference to the shard pointer, which (morally, if not actually)
389 | |             // owns the shard. The shard is only deallocated when the shard
...   |
395 | |             &*ptr
396 | |         };
    | |_________^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/lib.rs:780:1
    |
780 | unsafe impl<T: Send, C: cfg::Config> Send for Slab<T, C> {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: implementation of an `unsafe` trait
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/lib.rs:781:1
    |
781 | unsafe impl<T: Sync, C: cfg::Config> Sync for Slab<T, C> {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/lib.rs:793:9
    |
793 | /         unsafe {
794 | |             // Safety: this is always going to be valid, as it's projected from
795 | |             // the safe reference to `self.value` --- this is just to avoid
796 | |             // having to `expect` an option in the hot path when dereferencing.
797 | |             self.value.as_ref()
798 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/lib.rs:812:29
    |
812 |           let should_remove = unsafe {
    |  _____________________________^
813 | |             // Safety: calling `slot::Guard::release` is unsafe, since the
814 | |             // `Guard` value contains a pointer to the slot that may outlive the
815 | |             // slab containing that slot. Here, the `Entry` guard owns a
...   |
819 | |             self.inner.release()
820 | |         };
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/lib.rs:875:21
    |
875 |           let value = unsafe {
    |  _____________________^
876 | |             // Safety: this `VacantEntry` only lives as long as the `Slab` it was
877 | |             // borrowed from, so it cannot outlive the entry's slot.
878 | |             self.inner.value_mut()
879 | |         };
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/lib.rs:885:25
    |
885 |           let _released = unsafe {
    |  _________________________^
886 | |             // Safety: again, this `VacantEntry` only lives as long as the
887 | |             // `Slab` it was borrowed from, so it cannot outlive the entry's
888 | |             // slot.
889 | |             self.inner.release()
890 | |         };
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/lib.rs:935:9
    |
935 | /         unsafe {
936 | |             // Safety: this is always going to be valid, as it's projected from
937 | |             // the safe reference to `self.value` --- this is just to avoid
938 | |             // having to `expect` an option in the hot path when dereferencing.
939 | |             self.value.as_ref()
940 | |         }
    | |_________^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/lib.rs:961:28
    |
961 |           let should_clear = unsafe {
    |  ____________________________^
962 | |             // Safety: calling `slot::Guard::release` is unsafe, since the
963 | |             // `Guard` value contains a pointer to the slot that may outlive the
964 | |             // slab containing that slot. Here, the `OwnedEntry` owns an `Arc`
...   |
967 | |             self.inner.release()
968 | |         };
    | |_________^

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/lib.rs:1002:1
     |
1002 | / unsafe impl<T, C> Sync for OwnedEntry<T, C>
1003 | | where
1004 | |     T: Sync,
1005 | |     C: cfg::Config,
1006 | | {
1007 | | }
     | |_^

warning: implementation of an `unsafe` trait
    --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sharded-slab-0.1.7/src/lib.rs:1009:1
     |
1009 | / unsafe impl<T, C> Send for OwnedEntry<T, C>
1010 | | where
1011 | |     T: Sync,
1012 | |     C: cfg::Config,
1013 | | {
1014 | | }
     | |_^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/error.rs:23:11
   |
23 |     Error(unsafe { NonZeroU32::new_unchecked(code) })
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-F unsafe-code`

warning: declaration of an `unsafe` function
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util.rs:8:1
   |
8  | / pub unsafe fn slice_assume_init_mut<T>(slice: &mut [MaybeUninit<T>]) -> &mut [T] {
9  | |     // SAFETY: `MaybeUninit<T>` is guaranteed to be layout-compatible with `T`.
10 | |     &mut *(slice as *mut [MaybeUninit<T>] as *mut [T])
11 | | }
   | |_^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util.rs:15:5
   |
15 |     unsafe { ptr::write_bytes(slice.as_mut_ptr(), 0, slice.len()) };
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util.rs:16:5
   |
16 |     unsafe { slice_assume_init_mut(slice) }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util.rs:24:5
   |
24 |     unsafe { &*(slice as *const [T] as *const [MaybeUninit<T>]) }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: declaration of an `unsafe` function
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/util.rs:32:1
   |
32 | / pub unsafe fn slice_as_uninit_mut<T>(slice: &mut [T]) -> &mut [MaybeUninit<T>] {
33 | |     // SAFETY: `MaybeUninit<T>` is guaranteed to be layout-compatible with `T`.
34 | |     &mut *(slice as *mut [T] as *mut [MaybeUninit<T>])
35 | | }
   | |_^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lib.rs:370:22
    |
370 |     getrandom_uninit(unsafe { slice_as_uninit_mut(dest) })?;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: usage of an `unsafe` block
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lib.rs:402:8
    |
402 |     Ok(unsafe { slice_assume_init_mut(dest) })
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

     Running `CARGO=/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=proc_macro_crate CARGO_MANIFEST_DIR=/home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro-crate-3.1.0 CARGO_PKG_AUTHORS='Bastian Köcher <git@kchr.de>' CARGO_PKG_DESCRIPTION='Replacement for crate (macro_rules keyword) in proc-macros
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=proc-macro-crate CARGO_PKG_README=./README.md CARGO_PKG_REPOSITORY='https://github.com/bkchr/proc-macro-crate' CARGO_PKG_RUST_VERSION=1.67.0 CARGO_PKG_VERSION=3.1.0 CARGO_PKG_VERSION_MAJOR=3 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/antonio/Developer/kilt-node/target/debug/deps:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib' /home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name proc_macro_crate --edition=2021 /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro-crate-3.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=ffd0b9dab864049c -C extra-filename=-ffd0b9dab864049c --out-dir /home/antonio/Developer/kilt-node/target/debug/deps -L dependency=/home/antonio/Developer/kilt-node/target/debug/deps --extern toml_edit=/home/antonio/Developer/kilt-node/target/debug/deps/libtoml_edit-934e2f1416366006.rmeta --cap-lints warn`
     Running `CARGO=/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=digest CARGO_MANIFEST_DIR=/home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/digest-0.10.7 CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Traits for cryptographic hash functions and message authentication codes' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=digest CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/traits' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.10.7 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=7 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/antonio/Developer/kilt-node/target/debug/deps:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib' /home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name digest --edition=2018 /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/digest-0.10.7/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="alloc"' --cfg 'feature="block-buffer"' --cfg 'feature="const-oid"' --cfg 'feature="core-api"' --cfg 'feature="default"' --cfg 'feature="mac"' --cfg 'feature="oid"' --cfg 'feature="std"' --cfg 'feature="subtle"' -C metadata=edb2d271439fefa1 -C extra-filename=-edb2d271439fefa1 --out-dir /home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps --target wasm32-unknown-unknown -L dependency=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps -L dependency=/home/antonio/Developer/kilt-node/target/debug/deps --extern block_buffer=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps/libblock_buffer-b092a619d1fb6809.rmeta --extern const_oid=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps/libconst_oid-3d6f517996810cea.rmeta --extern crypto_common=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps/libcrypto_common-99aa3074cb77fdc8.rmeta --extern subtle=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps/libsubtle-a045fa181c257633.rmeta --cap-lints warn '-Dclippy::arithmetic_side_effects' '-Dclippy::as_conversions' '-Dclippy::assertions_on_result_states' '-Dclippy::cast_possible_wrap' '-Dclippy::dbg_macro' '-Dclippy::expect_used' '-Dclippy::float_arithmetic' '-Dclippy::float_cmp_const' '-Dclippy::index_refutable_slice' '-Dclippy::indexing_slicing' '-Dclippy::lossy_float_literal' '-Dclippy::panic' '-Dclippy::string_slice' '-Dclippy::todo' '-Dclippy::unimplemented' '-Dclippy::unreachable' '-Dclippy::unwrap_used' -Funsafe_code '-Wclippy::integer_division' '-Wclippy::modulo_arithmetic' '-Wclippy::print_stderr' '-Wclippy::print_stdout'`
     Running `CARGO=/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=wasmtime_types CARGO_MANIFEST_DIR=/home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/wasmtime-types-8.0.1 CARGO_PKG_AUTHORS='The Wasmtime Project Developers' CARGO_PKG_DESCRIPTION='WebAssembly type definitions for Cranelift' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 WITH LLVM-exception' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=wasmtime-types CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/bytecodealliance/wasmtime' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=8.0.1 CARGO_PKG_VERSION_MAJOR=8 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/antonio/Developer/kilt-node/target/debug/deps:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib' /home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name wasmtime_types --edition=2021 /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/wasmtime-types-8.0.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 -C metadata=9d7a9112ab74d798 -C extra-filename=-9d7a9112ab74d798 --out-dir /home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps --target wasm32-unknown-unknown -L dependency=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps -L dependency=/home/antonio/Developer/kilt-node/target/debug/deps --extern cranelift_entity=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps/libcranelift_entity-b4b0a08626474c03.rmeta --extern serde=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps/libserde-306fb1f7af3c5d6d.rmeta --extern thiserror=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps/libthiserror-d812683a579c8992.rmeta --extern wasmparser=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps/libwasmparser-d4282c3bdbcf2fda.rmeta --cap-lints warn '-Dclippy::arithmetic_side_effects' '-Dclippy::as_conversions' '-Dclippy::assertions_on_result_states' '-Dclippy::cast_possible_wrap' '-Dclippy::dbg_macro' '-Dclippy::expect_used' '-Dclippy::float_arithmetic' '-Dclippy::float_cmp_const' '-Dclippy::index_refutable_slice' '-Dclippy::indexing_slicing' '-Dclippy::lossy_float_literal' '-Dclippy::panic' '-Dclippy::string_slice' '-Dclippy::todo' '-Dclippy::unimplemented' '-Dclippy::unreachable' '-Dclippy::unwrap_used' -Funsafe_code '-Wclippy::integer_division' '-Wclippy::modulo_arithmetic' '-Wclippy::print_stderr' '-Wclippy::print_stdout'`
     Running `CARGO=/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=addr2line CARGO_MANIFEST_DIR=/home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/addr2line-0.19.0 CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='A cross-platform symbolication library written in Rust, using `gimli`' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=addr2line CARGO_PKG_README=./README.md CARGO_PKG_REPOSITORY='https://github.com/gimli-rs/addr2line' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.19.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=19 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/antonio/Developer/kilt-node/target/debug/deps:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib' /home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name addr2line /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/addr2line-0.19.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 -C metadata=1bf5f24d2b4a21e9 -C extra-filename=-1bf5f24d2b4a21e9 --out-dir /home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps --target wasm32-unknown-unknown -L dependency=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps -L dependency=/home/antonio/Developer/kilt-node/target/debug/deps --extern gimli=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps/libgimli-699cc8723c35bfc2.rmeta --cap-lints warn '-Dclippy::arithmetic_side_effects' '-Dclippy::as_conversions' '-Dclippy::assertions_on_result_states' '-Dclippy::cast_possible_wrap' '-Dclippy::dbg_macro' '-Dclippy::expect_used' '-Dclippy::float_arithmetic' '-Dclippy::float_cmp_const' '-Dclippy::index_refutable_slice' '-Dclippy::indexing_slicing' '-Dclippy::lossy_float_literal' '-Dclippy::panic' '-Dclippy::string_slice' '-Dclippy::todo' '-Dclippy::unimplemented' '-Dclippy::unreachable' '-Dclippy::unwrap_used' -Funsafe_code '-Wclippy::integer_division' '-Wclippy::modulo_arithmetic' '-Wclippy::print_stderr' '-Wclippy::print_stdout'`
warning: `tracing-attributes` (lib) generated 1 warning
error[E0583]: file not found for module `sys`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:26:1
   |
26 | mod sys;
   | ^^^^^^^^
   |
   = help: to create the module `sys`, create file "/home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys.rs" or "/home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys/mod.rs"

warning: `matchers` (lib) generated 1 warning
warning: `ref-cast` (lib) generated 4 warnings
warning: `psm` (lib) generated 8 warnings
error[E0433]: failed to resolve: use of undeclared crate or module `imp`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lib.rs:398:9
    |
398 |         imp::getrandom_inner(dest)?;
    |         ^^^ use of undeclared crate or module `imp`

For more information about this error, try `rustc --explain E0433`.
error[E0425]: cannot find function `with_description` in module `sys`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:47:14
   |
47 |         sys::with_description(*self, |desc| {
   |              ^^^^^^^^^^^^^^^^ not found in `sys`

error[E0425]: cannot find function `with_description` in module `sys`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:58:14
   |
58 |         sys::with_description(*self, |desc| match desc {
   |              ^^^^^^^^^^^^^^^^ not found in `sys`

error[E0425]: cannot find value `STRERROR_NAME` in module `sys`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:64:22
   |
64 |                 sys::STRERROR_NAME,
   |                      ^^^^^^^^^^^^^ not found in `sys`

error[E0425]: cannot find function `errno` in module `sys`
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:95:10
   |
95 |     sys::errno()
   |          ^^^^^ not found in `sys`

error[E0425]: cannot find function `set_errno` in module `sys`
   --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:100:10
    |
100 |     sys::set_errno(err)
    |          ^^^^^^^^^ not found in `sys`

warning: `getrandom` (lib) generated 8 warnings
error: could not compile `getrandom` (lib) due to 2 previous errors; 8 warnings emitted

Caused by:
  process didn't exit successfully: `CARGO=/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=getrandom CARGO_MANIFEST_DIR=/home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15 CARGO_PKG_AUTHORS='The Rand Project Developers' CARGO_PKG_DESCRIPTION='A small cross-platform library for retrieving random data from system source' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=getrandom CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-random/getrandom' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.15 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=15 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/antonio/Developer/kilt-node/target/debug/deps:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib' /home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name getrandom --edition=2018 /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="std"' -C metadata=ebe5de74c1ed5fc2 -C extra-filename=-ebe5de74c1ed5fc2 --out-dir /home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps --target wasm32-unknown-unknown -L dependency=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps -L dependency=/home/antonio/Developer/kilt-node/target/debug/deps --extern cfg_if=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps/libcfg_if-61136ad543fe3f21.rmeta --cap-lints warn '-Dclippy::arithmetic_side_effects' '-Dclippy::as_conversions' '-Dclippy::assertions_on_result_states' '-Dclippy::cast_possible_wrap' '-Dclippy::dbg_macro' '-Dclippy::expect_used' '-Dclippy::float_arithmetic' '-Dclippy::float_cmp_const' '-Dclippy::index_refutable_slice' '-Dclippy::indexing_slicing' '-Dclippy::lossy_float_literal' '-Dclippy::panic' '-Dclippy::string_slice' '-Dclippy::todo' '-Dclippy::unimplemented' '-Dclippy::unreachable' '-Dclippy::unwrap_used' -Funsafe_code '-Wclippy::integer_division' '-Wclippy::modulo_arithmetic' '-Wclippy::print_stderr' '-Wclippy::print_stdout'` (exit status: 1)
warning: build failed, waiting for other jobs to finish...
warning: `sharded-slab` (lib) generated 58 warnings
Some errors have detailed explanations: E0425, E0583.
For more information about an error, try `rustc --explain E0425`.
error: could not compile `errno` (lib) due to 6 previous errors

Caused by:
  process didn't exit successfully: `CARGO=/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=errno CARGO_MANIFEST_DIR=/home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9 CARGO_PKG_AUTHORS='Chris Wong <lambda.fairy@gmail.com>' CARGO_PKG_DESCRIPTION='Cross-platform interface to the `errno` variable.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=errno CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/lambda-fairy/rust-errno' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.3.9 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=9 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/antonio/Developer/kilt-node/target/debug/deps:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib:/home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/lib' /home/antonio/.rustup/toolchains/1.74.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name errno --edition=2018 /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="std"' -C metadata=5d120ce676864a56 -C extra-filename=-5d120ce676864a56 --out-dir /home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps --target wasm32-unknown-unknown -L dependency=/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/deps -L dependency=/home/antonio/Developer/kilt-node/target/debug/deps --cap-lints warn '-Dclippy::arithmetic_side_effects' '-Dclippy::as_conversions' '-Dclippy::assertions_on_result_states' '-Dclippy::cast_possible_wrap' '-Dclippy::dbg_macro' '-Dclippy::expect_used' '-Dclippy::float_arithmetic' '-Dclippy::float_cmp_const' '-Dclippy::index_refutable_slice' '-Dclippy::indexing_slicing' '-Dclippy::lossy_float_literal' '-Dclippy::panic' '-Dclippy::string_slice' '-Dclippy::todo' '-Dclippy::unimplemented' '-Dclippy::unreachable' '-Dclippy::unwrap_used' -Funsafe_code '-Wclippy::integer_division' '-Wclippy::modulo_arithmetic' '-Wclippy::print_stderr' '-Wclippy::print_stdout'` (exit status: 1)
warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/addr2line-0.19.0/src/lazy.rs:16:28
   |
16 |         if let Some(val) = unsafe { &*ptr } {
   |                            ^^^^^^^^^^^^^^^^
   |
   = note: requested on the command line with `-F unsafe-code`

warning: usage of an `unsafe` block
  --> /home/antonio/.cargo/registry/src/index.crates.io-6f17d22bba15001f/addr2line-0.19.0/src/lazy.rs:25:9
   |
25 |         unsafe { (*ptr).get_or_insert(val) }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

[wasmtime-runtime 8.0.1] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[wasmtime-runtime 8.0.1] CRATE_CC_NO_DEFAULTS = None
[wasmtime-runtime 8.0.1] DEBUG = Some("true")
[wasmtime-runtime 8.0.1] cargo:rerun-if-env-changed=CFLAGS_wasm32-unknown-unknown
[wasmtime-runtime 8.0.1] CFLAGS_wasm32-unknown-unknown = None
[wasmtime-runtime 8.0.1] cargo:rerun-if-env-changed=CFLAGS_wasm32_unknown_unknown
[wasmtime-runtime 8.0.1] CFLAGS_wasm32_unknown_unknown = None
[wasmtime-runtime 8.0.1] cargo:rerun-if-env-changed=TARGET_CFLAGS
[wasmtime-runtime 8.0.1] TARGET_CFLAGS = None
[wasmtime-runtime 8.0.1] cargo:rerun-if-env-changed=CFLAGS
[wasmtime-runtime 8.0.1] CFLAGS = None
warning: `addr2line` (lib) generated 2 warnings
[wasmtime-runtime 8.0.1] cargo:warning=src/helpers.c:1:10: fatal error: 'setjmp.h' file not found
[wasmtime-runtime 8.0.1] cargo:warning=#include <setjmp.h>
[wasmtime-runtime 8.0.1] cargo:warning=         ^~~~~~~~~~
[wasmtime-runtime 8.0.1] cargo:warning=1 error generated.
[wasmtime-runtime 8.0.1] 
[wasmtime-runtime 8.0.1] 
[wasmtime-runtime 8.0.1] error occurred: Command "clang" "-O0" "-ffunction-sections" "-fdata-sections" "-fPIC" "-g" "-fno-omit-frame-pointer" "--target=wasm32-unknown-unknown" "-Wall" "-Wextra" "-DCFG_TARGET_OS_unknown" "-DCFG_TARGET_ARCH_wasm32" "-o" "/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/build/wasmtime-runtime-ad4c2e9d3a00fc1a/out/2e40c9e35e9506f4-helpers.o" "-c" "src/helpers.c" with args clang did not execute successfully (status code exit status: 1).
[wasmtime-runtime 8.0.1] 
[wasmtime-runtime 8.0.1] 
The following warnings were emitted during compilation:

warning: src/helpers.c:1:10: fatal error: 'setjmp.h' file not found
warning: #include <setjmp.h>
warning:          ^~~~~~~~~~
warning: 1 error generated.

error: failed to run custom build command for `wasmtime-runtime v8.0.1`

Caused by:
  process didn't exit successfully: `/home/antonio/Developer/kilt-node/target/debug/build/wasmtime-runtime-49c15dd8a423a208/build-script-build` (exit status: 1)
  --- stdout
  cargo:rerun-if-changed=src/helpers.c
  TARGET = Some("wasm32-unknown-unknown")
  OPT_LEVEL = Some("0")
  HOST = Some("x86_64-unknown-linux-gnu")
  cargo:rerun-if-env-changed=CC_wasm32-unknown-unknown
  CC_wasm32-unknown-unknown = None
  cargo:rerun-if-env-changed=CC_wasm32_unknown_unknown
  CC_wasm32_unknown_unknown = None
  cargo:rerun-if-env-changed=TARGET_CC
  TARGET_CC = None
  cargo:rerun-if-env-changed=CC
  CC = None
  cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
  cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
  CRATE_CC_NO_DEFAULTS = None
  DEBUG = Some("true")
  cargo:rerun-if-env-changed=CFLAGS_wasm32-unknown-unknown
  CFLAGS_wasm32-unknown-unknown = None
  cargo:rerun-if-env-changed=CFLAGS_wasm32_unknown_unknown
  CFLAGS_wasm32_unknown_unknown = None
  cargo:rerun-if-env-changed=TARGET_CFLAGS
  TARGET_CFLAGS = None
  cargo:rerun-if-env-changed=CFLAGS
  CFLAGS = None
  cargo:warning=src/helpers.c:1:10: fatal error: 'setjmp.h' file not found
  cargo:warning=#include <setjmp.h>
  cargo:warning=         ^~~~~~~~~~
  cargo:warning=1 error generated.

  --- stderr


  error occurred: Command "clang" "-O0" "-ffunction-sections" "-fdata-sections" "-fPIC" "-g" "-fno-omit-frame-pointer" "--target=wasm32-unknown-unknown" "-Wall" "-Wextra" "-DCFG_TARGET_OS_unknown" "-DCFG_TARGET_ARCH_wasm32" "-o" "/home/antonio/Developer/kilt-node/target/wasm32-unknown-unknown/debug/build/wasmtime-runtime-ad4c2e9d3a00fc1a/out/2e40c9e35e9506f4-helpers.o" "-c" "src/helpers.c" with args clang did not execute successfully (status code exit status: 1).


