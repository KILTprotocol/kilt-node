// TODO: Update these weights

// KILT Blockchain – https://botlabs.org
// Copyright (C) 2019-2023 BOTLabs GmbH

// The KILT Blockchain is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// The KILT Blockchain is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// If you feel like getting in touch with us, you can do so at info@botlabs.org

//! Autogenerated weights for delegation
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-04-05
//! STEPS: `2`, REPEAT: `1`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `rust-2`, CPU: `12th Gen Intel(R) Core(TM) i9-12900K`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/debug/kilt-parachain
// benchmark
// pallet
// --template=.maintain/weight-template.hbs
// --header=HEADER-GPL
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --steps=2
// --repeat=1
// --chain=dev
// --pallet=delegation
// --extrinsic=*
// --output=./pallets/delegation/src/default_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for delegation.
pub trait WeightInfo {
	fn create_hierarchy() -> Weight;
	fn add_delegation() -> Weight;
	fn revoke_delegation_root_child(r: u32, c: u32, ) -> Weight;
	fn revoke_delegation_leaf(r: u32, c: u32, ) -> Weight;
	fn remove_delegation(r: u32, ) -> Weight;
	fn reclaim_deposit(r: u32, ) -> Weight;
	fn can_attest() -> Weight;
	fn can_revoke(c: u32, ) -> Weight;
	fn can_remove(c: u32, ) -> Weight;
	fn change_deposit_owner() -> Weight;
	fn update_deposit() -> Weight;
}

/// Weights for delegation using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Delegation DelegationHierarchies (r:1 w:1)
	/// Proof: Delegation DelegationHierarchies (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Ctype Ctypes (r:1 w:0)
	/// Proof: Ctype Ctypes (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	/// Storage: Delegation DelegationNodes (r:0 w:1)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	fn create_hierarchy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `896`
		//  Estimated: `7725`
		// Minimum execution time: 498_005 nanoseconds.
		Weight::from_parts(498_005_000, 7725)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Delegation DelegationNodes (r:2 w:2)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn add_delegation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1048`
		//  Estimated: `71957`
		// Minimum execution time: 499_731 nanoseconds.
		Weight::from_parts(499_731_000, 71957)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Delegation DelegationNodes (r:5 w:5)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: Delegation DelegationHierarchies (r:1 w:0)
	/// Proof: Delegation DelegationHierarchies (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 5]`.
	/// The range of component `c` is `[1, 5]`.
	fn revoke_delegation_root_child(r: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `234 + r * (272 ±0)`
		//  Estimated: `2555 + r * (34675 ±0)`
		// Minimum execution time: 390_746 nanoseconds.
		Weight::from_parts(235_841_750, 2555)
			// Standard Error: 1_801_116
			.saturating_add(Weight::from_ref_time(151_796_125).saturating_mul(r.into()))
			// Standard Error: 1_801_116
			.saturating_add(Weight::from_ref_time(621_625).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_proof_size(34675).saturating_mul(r.into()))
	}
	/// Storage: Delegation DelegationNodes (r:6 w:1)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: Delegation DelegationHierarchies (r:1 w:0)
	/// Proof: Delegation DelegationHierarchies (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 5]`.
	/// The range of component `c` is `[1, 5]`.
	fn revoke_delegation_leaf(_r: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `439 + c * (272 ±0)`
		//  Estimated: `37230 + c * (34675 ±0)`
		// Minimum execution time: 448_052 nanoseconds.
		Weight::from_parts(466_867_250, 37230)
			// Standard Error: 4_082_010
			.saturating_add(Weight::from_ref_time(46_061_000).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(c.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_proof_size(34675).saturating_mul(c.into()))
	}
	/// Storage: Delegation DelegationNodes (r:6 w:6)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	/// Storage: Delegation DelegationHierarchies (r:1 w:1)
	/// Proof: Delegation DelegationHierarchies (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 5]`.
	fn remove_delegation(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1117 + r * (272 ±0)`
		//  Estimated: `213212`
		// Minimum execution time: 846_272 nanoseconds.
		Weight::from_parts(1_924_756_000, 213212)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: Delegation DelegationNodes (r:6 w:6)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	/// Storage: Delegation DelegationHierarchies (r:0 w:1)
	/// Proof: Delegation DelegationHierarchies (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 5]`.
	fn reclaim_deposit(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1049 + r * (272 ±0)`
		//  Estimated: `210657`
		// Minimum execution time: 743_542 nanoseconds.
		Weight::from_parts(1_854_091_000, 210657)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: Delegation DelegationNodes (r:1 w:0)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: Delegation DelegationHierarchies (r:1 w:0)
	/// Proof: Delegation DelegationHierarchies (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	fn can_attest() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `645`
		//  Estimated: `37230`
		// Minimum execution time: 182_204 nanoseconds.
		Weight::from_parts(182_204_000, 37230)
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
	/// Storage: Delegation DelegationNodes (r:6 w:0)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 5]`.
	fn can_revoke(_c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `371 + c * (272 ±0)`
		//  Estimated: `208050`
		// Minimum execution time: 159_855 nanoseconds.
		Weight::from_parts(340_154_000, 208050)
			.saturating_add(T::DbWeight::get().reads(6_u64))
	}
	/// Storage: Delegation DelegationNodes (r:6 w:0)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 5]`.
	fn can_remove(_c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `371 + c * (272 ±0)`
		//  Estimated: `208050`
		// Minimum execution time: 145_044 nanoseconds.
		Weight::from_parts(346_150_000, 208050)
			.saturating_add(T::DbWeight::get().reads(6_u64))
	}
	/// Storage: Delegation DelegationNodes (r:1 w:1)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn change_deposit_owner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1696`
		//  Estimated: `39889`
		// Minimum execution time: 596_163 nanoseconds.
		Weight::from_parts(596_163_000, 39889)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Delegation DelegationNodes (r:1 w:1)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn update_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1117`
		//  Estimated: `37282`
		// Minimum execution time: 546_160 nanoseconds.
		Weight::from_parts(546_160_000, 37282)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Delegation DelegationHierarchies (r:1 w:1)
	/// Proof: Delegation DelegationHierarchies (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Ctype Ctypes (r:1 w:0)
	/// Proof: Ctype Ctypes (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	/// Storage: Delegation DelegationNodes (r:0 w:1)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	fn create_hierarchy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `896`
		//  Estimated: `7725`
		// Minimum execution time: 498_005 nanoseconds.
		Weight::from_parts(498_005_000, 7725)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Delegation DelegationNodes (r:2 w:2)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn add_delegation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1048`
		//  Estimated: `71957`
		// Minimum execution time: 499_731 nanoseconds.
		Weight::from_parts(499_731_000, 71957)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Delegation DelegationNodes (r:5 w:5)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: Delegation DelegationHierarchies (r:1 w:0)
	/// Proof: Delegation DelegationHierarchies (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 5]`.
	/// The range of component `c` is `[1, 5]`.
	fn revoke_delegation_root_child(r: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `234 + r * (272 ±0)`
		//  Estimated: `2555 + r * (34675 ±0)`
		// Minimum execution time: 390_746 nanoseconds.
		Weight::from_parts(235_841_750, 2555)
			// Standard Error: 1_801_116
			.saturating_add(Weight::from_ref_time(151_796_125).saturating_mul(r.into()))
			// Standard Error: 1_801_116
			.saturating_add(Weight::from_ref_time(621_625).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_proof_size(34675).saturating_mul(r.into()))
	}
	/// Storage: Delegation DelegationNodes (r:6 w:1)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: Delegation DelegationHierarchies (r:1 w:0)
	/// Proof: Delegation DelegationHierarchies (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 5]`.
	/// The range of component `c` is `[1, 5]`.
	fn revoke_delegation_leaf(_r: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `439 + c * (272 ±0)`
		//  Estimated: `37230 + c * (34675 ±0)`
		// Minimum execution time: 448_052 nanoseconds.
		Weight::from_parts(466_867_250, 37230)
			// Standard Error: 4_082_010
			.saturating_add(Weight::from_ref_time(46_061_000).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(c.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_proof_size(34675).saturating_mul(c.into()))
	}
	/// Storage: Delegation DelegationNodes (r:6 w:6)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	/// Storage: Delegation DelegationHierarchies (r:1 w:1)
	/// Proof: Delegation DelegationHierarchies (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 5]`.
	fn remove_delegation(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1117 + r * (272 ±0)`
		//  Estimated: `213212`
		// Minimum execution time: 846_272 nanoseconds.
		Weight::from_parts(1_924_756_000, 213212)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: Delegation DelegationNodes (r:6 w:6)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	/// Storage: Delegation DelegationHierarchies (r:0 w:1)
	/// Proof: Delegation DelegationHierarchies (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 5]`.
	fn reclaim_deposit(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1049 + r * (272 ±0)`
		//  Estimated: `210657`
		// Minimum execution time: 743_542 nanoseconds.
		Weight::from_parts(1_854_091_000, 210657)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: Delegation DelegationNodes (r:1 w:0)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: Delegation DelegationHierarchies (r:1 w:0)
	/// Proof: Delegation DelegationHierarchies (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	fn can_attest() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `645`
		//  Estimated: `37230`
		// Minimum execution time: 182_204 nanoseconds.
		Weight::from_parts(182_204_000, 37230)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
	}
	/// Storage: Delegation DelegationNodes (r:6 w:0)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 5]`.
	fn can_revoke(_c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `371 + c * (272 ±0)`
		//  Estimated: `208050`
		// Minimum execution time: 159_855 nanoseconds.
		Weight::from_parts(340_154_000, 208050)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
	}
	/// Storage: Delegation DelegationNodes (r:6 w:0)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 5]`.
	fn can_remove(_c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `371 + c * (272 ±0)`
		//  Estimated: `208050`
		// Minimum execution time: 145_044 nanoseconds.
		Weight::from_parts(346_150_000, 208050)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
	}
	/// Storage: Delegation DelegationNodes (r:1 w:1)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn change_deposit_owner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1696`
		//  Estimated: `39889`
		// Minimum execution time: 596_163 nanoseconds.
		Weight::from_parts(596_163_000, 39889)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Delegation DelegationNodes (r:1 w:1)
	/// Proof: Delegation DelegationNodes (max_values: None, max_size: Some(32200), added: 34675, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn update_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1117`
		//  Estimated: `37282`
		// Minimum execution time: 546_160 nanoseconds.
		Weight::from_parts(546_160_000, 37282)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
}
