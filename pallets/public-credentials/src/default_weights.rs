// TODO: Update these weights

// KILT Blockchain â€“ https://botlabs.org
// Copyright (C) 2019-2023 BOTLabs GmbH

// The KILT Blockchain is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// The KILT Blockchain is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// If you feel like getting in touch with us, you can do so at info@botlabs.org

//! Autogenerated weights for public_credentials
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-04-05
//! STEPS: `2`, REPEAT: `1`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `rust-2`, CPU: `12th Gen Intel(R) Core(TM) i9-12900K`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/debug/kilt-parachain
// benchmark
// pallet
// --template=.maintain/weight-template.hbs
// --header=HEADER-GPL
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --steps=2
// --repeat=1
// --chain=dev
// --pallet=public-credentials
// --extrinsic=*
// --output=./pallets/public-credentials/src/default_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for public_credentials.
pub trait WeightInfo {
	fn add(c: u32, ) -> Weight;
	fn revoke() -> Weight;
	fn unrevoke() -> Weight;
	fn remove() -> Weight;
	fn reclaim_deposit() -> Weight;
	fn change_deposit_owner() -> Weight;
	fn update_deposit() -> Weight;
}

/// Weights for public_credentials using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Ctype Ctypes (r:1 w:0)
	/// Proof: Ctype Ctypes (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	/// Storage: PublicCredentials CredentialSubjects (r:0 w:1)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 100000]`.
	fn add(_c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `863`
		//  Estimated: `8120`
		// Minimum execution time: 590_891 nanoseconds.
		Weight::from_parts(3_277_178_000, 8120)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: PublicCredentials CredentialSubjects (r:1 w:0)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	fn revoke() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `948`
		//  Estimated: `5737`
		// Minimum execution time: 322_692 nanoseconds.
		Weight::from_parts(322_692_000, 5737)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: PublicCredentials CredentialSubjects (r:1 w:0)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	fn unrevoke() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `948`
		//  Estimated: `5737`
		// Minimum execution time: 322_135 nanoseconds.
		Weight::from_parts(322_135_000, 5737)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: PublicCredentials CredentialSubjects (r:1 w:1)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn remove() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1626`
		//  Estimated: `8344`
		// Minimum execution time: 542_641 nanoseconds.
		Weight::from_parts(542_641_000, 8344)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: PublicCredentials CredentialSubjects (r:1 w:1)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn reclaim_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1626`
		//  Estimated: `8344`
		// Minimum execution time: 543_391 nanoseconds.
		Weight::from_parts(543_391_000, 8344)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: PublicCredentials CredentialSubjects (r:1 w:0)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn change_deposit_owner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1499`
		//  Estimated: `10951`
		// Minimum execution time: 729_684 nanoseconds.
		Weight::from_parts(729_684_000, 10951)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: PublicCredentials CredentialSubjects (r:1 w:0)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn update_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1086`
		//  Estimated: `8344`
		// Minimum execution time: 677_747 nanoseconds.
		Weight::from_parts(677_747_000, 8344)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Ctype Ctypes (r:1 w:0)
	/// Proof: Ctype Ctypes (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	/// Storage: PublicCredentials CredentialSubjects (r:0 w:1)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 100000]`.
	fn add(_c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `863`
		//  Estimated: `8120`
		// Minimum execution time: 590_891 nanoseconds.
		Weight::from_parts(3_277_178_000, 8120)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: PublicCredentials CredentialSubjects (r:1 w:0)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	fn revoke() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `948`
		//  Estimated: `5737`
		// Minimum execution time: 322_692 nanoseconds.
		Weight::from_parts(322_692_000, 5737)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: PublicCredentials CredentialSubjects (r:1 w:0)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	fn unrevoke() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `948`
		//  Estimated: `5737`
		// Minimum execution time: 322_135 nanoseconds.
		Weight::from_parts(322_135_000, 5737)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: PublicCredentials CredentialSubjects (r:1 w:1)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn remove() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1626`
		//  Estimated: `8344`
		// Minimum execution time: 542_641 nanoseconds.
		Weight::from_parts(542_641_000, 8344)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: PublicCredentials CredentialSubjects (r:1 w:1)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn reclaim_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1626`
		//  Estimated: `8344`
		// Minimum execution time: 543_391 nanoseconds.
		Weight::from_parts(543_391_000, 8344)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: PublicCredentials CredentialSubjects (r:1 w:0)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn change_deposit_owner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1499`
		//  Estimated: `10951`
		// Minimum execution time: 729_684 nanoseconds.
		Weight::from_parts(729_684_000, 10951)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: PublicCredentials CredentialSubjects (r:1 w:0)
	/// Proof: PublicCredentials CredentialSubjects (max_values: None, max_size: Some(312), added: 2787, mode: MaxEncodedLen)
	/// Storage: PublicCredentials Credentials (r:1 w:1)
	/// Proof: PublicCredentials Credentials (max_values: None, max_size: Some(475), added: 2950, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn update_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1086`
		//  Estimated: `8344`
		// Minimum execution time: 677_747 nanoseconds.
		Weight::from_parts(677_747_000, 8344)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
}
