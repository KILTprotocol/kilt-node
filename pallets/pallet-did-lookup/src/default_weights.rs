// KILT Blockchain â€“ https://botlabs.org
// Copyright (C) 2019-2023 BOTLabs GmbH

// The KILT Blockchain is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// The KILT Blockchain is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// If you feel like getting in touch with us, you can do so at info@botlabs.org

//! Autogenerated weights for pallet_did_lookup
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-13, STEPS: {{cmd.steps}}\, REPEAT: {{cmd.repeat}}\, LOW RANGE: {{cmd.lowest_range_values}}\, HIGH RANGE: {{cmd.highest_range_values}}\
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/kilt-parachain
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet-did-lookup
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./pallets/pallet-did-lookup/src/default_weights.rs
// --template=.maintain/weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_did_lookup.
pub trait WeightInfo {
	fn associate_account_multisig_sr25519() -> Weight;
	fn associate_account_multisig_ed25519() -> Weight;
	fn associate_account_multisig_ecdsa() -> Weight;
	fn associate_eth_account() -> Weight;
	fn associate_sender() -> Weight;
	fn remove_sender_association() -> Weight;
	fn remove_account_association() -> Weight;
	fn change_deposit_owner() -> Weight;
	fn update_deposit() -> Weight;
	fn migrate(n: u32, ) -> Weight;
}

/// Weights for pallet_did_lookup using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:2)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn associate_account_multisig_sr25519() -> Weight {
		Weight::from_ref_time(106_642_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:2)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn associate_account_multisig_ed25519() -> Weight {
		Weight::from_ref_time(107_552_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:2)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn associate_account_multisig_ecdsa() -> Weight {
		Weight::from_ref_time(93_631_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:2)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn associate_eth_account() -> Weight {
		Weight::from_ref_time(95_519_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:2)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn associate_sender() -> Weight {
		Weight::from_ref_time(46_118_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:1)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn remove_sender_association() -> Weight {
		Weight::from_ref_time(46_476_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:1)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn remove_account_association() -> Weight {
		Weight::from_ref_time(31_735_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn change_deposit_owner() -> Weight {
		Weight::from_ref_time(42_306_000 as u64)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn update_deposit() -> Weight {
		Weight::from_ref_time(36_615_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: DidLookup MigrationStateStore (r:1 w:1)
	// Proof: DidLookup MigrationStateStore (max_values: Some(1), max_size: Some(35), added: 530, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedDids (r:101 w:184)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:92 w:184)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 100]`.
	fn migrate(n: u32, ) -> Weight {
		Weight::from_ref_time(65_902_356 as u64)
			// Standard Error: 23_661
			.saturating_add(Weight::from_ref_time(16_220_599 as u64).saturating_mul(n as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().reads((2 as u64).saturating_mul(n as u64)))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
			.saturating_add(T::DbWeight::get().writes((4 as u64).saturating_mul(n as u64)))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:2)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn associate_account_multisig_sr25519() -> Weight {
		Weight::from_ref_time(106_642_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:2)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn associate_account_multisig_ed25519() -> Weight {
		Weight::from_ref_time(107_552_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:2)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn associate_account_multisig_ecdsa() -> Weight {
		Weight::from_ref_time(93_631_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:2)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn associate_eth_account() -> Weight {
		Weight::from_ref_time(95_519_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:2)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn associate_sender() -> Weight {
		Weight::from_ref_time(46_118_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:1)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn remove_sender_association() -> Weight {
		Weight::from_ref_time(46_476_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(3 as u64))
	}
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:0 w:1)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	fn remove_account_association() -> Weight {
		Weight::from_ref_time(31_735_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(3 as u64))
	}
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn change_deposit_owner() -> Weight {
		Weight::from_ref_time(42_306_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(3 as u64))
			.saturating_add(RocksDbWeight::get().writes(3 as u64))
	}
	// Storage: DidLookup ConnectedDids (r:1 w:1)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	fn update_deposit() -> Weight {
		Weight::from_ref_time(36_615_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
	}
	// Storage: DidLookup MigrationStateStore (r:1 w:1)
	// Proof: DidLookup MigrationStateStore (max_values: Some(1), max_size: Some(35), added: 530, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedDids (r:101 w:184)
	// Proof: DidLookup ConnectedDids (max_values: None, max_size: Some(129), added: 2604, mode: MaxEncodedLen)
	// Storage: DidLookup ConnectedAccounts (r:92 w:184)
	// Proof: DidLookup ConnectedAccounts (max_values: None, max_size: Some(97), added: 2572, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 100]`.
	fn migrate(n: u32, ) -> Weight {
		Weight::from_ref_time(65_902_356 as u64)
			// Standard Error: 23_661
			.saturating_add(Weight::from_ref_time(16_220_599 as u64).saturating_mul(n as u64))
			.saturating_add(RocksDbWeight::get().reads(3 as u64))
			.saturating_add(RocksDbWeight::get().reads((2 as u64).saturating_mul(n as u64)))
			.saturating_add(RocksDbWeight::get().writes(3 as u64))
			.saturating_add(RocksDbWeight::get().writes((4 as u64).saturating_mul(n as u64)))
	}
}
