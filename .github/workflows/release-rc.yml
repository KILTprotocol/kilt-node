on:
  workflow_dispatch:
    types: [created]
  push:
    branches:
      - master

name: Release Release Candidate

jobs:
  buildECR:

    name: Build image and push to Amazon ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build image
      run: |
        docker build -t kilt/mashnet-node --build-arg NODE_TYPE=mashnet-node .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: kilt/prototype-chain
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker tag kilt/mashnet-node $ECR_REGISTRY/$ECR_REPOSITORY:latest-rc
        docker tag kilt/mashnet-node $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest-rc

  buildDocker:

    name: Build image and push to Docker Hub
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build image
      run: |
        docker build -t kilt/mashnet-node --build-arg NODE_TYPE=mashnet-node .

    - name: Login to Docker Hub
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: |
        echo $DOCKER_PASS | docker login --username=$DOCKER_USER --password-stdin

    - name: Tag, and push image to Docker Hub
      env:
        DOCKER_REPOSITORY: kiltprotocol/mashnet-node
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker tag kilt/mashnet-node $DOCKER_REPOSITORY:latest-rc
        docker tag kilt/mashnet-node $DOCKER_REPOSITORY:$IMAGE_TAG
        docker push $DOCKER_REPOSITORY:$IMAGE_TAG
        docker push $DOCKER_REPOSITORY:latest-rc
