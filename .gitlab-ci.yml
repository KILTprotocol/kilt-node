stages:
  - test
  - build

clippy:
  image: paritytech/ci-unified:bullseye-1.70.0
  stage: test
  script:
    - cargo clippy --all-features --all-targets --locked -- -D warnings

fmt:
  image: paritytech/ci-unified:bullseye-1.70.0
  stage: test
  script:
    - cargo fmt -- --check

test:
  image: paritytech/ci-unified:bullseye-1.70.0
  stage: test
  script:
    - cargo test --all --all-targets --locked

test-features:
  image: paritytech/ci-unified:bullseye-1.70.0
  stage: test
  script:
    - cargo test --all --all-features --all-targets --locked

build:
  timeout: 2 hours
  image:
    name: kiltprotocol/kilt-ci:2.7.31
    entrypoint: [""]
  stage: build
  only:
    refs:
      - develop
      - master
      - /^[0-9]+(?:\.[0-9]+){2}(?:-(rc)*([0-9])+)?$/
      - /^[dev-](\w*-)*[0-9]?$/
  variables:
    DOCKER_HUB_PARACHAIN: "kiltprotocol/kilt-node"
    DOCKER_HUB_STANDALONE: "kiltprotocol/mashnet-node"
  before_script:
    - aws --version
    - docker --version
  script:
    - echo -n $CI_REGISTRY_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - aws ecr get-login-password | docker login --username AWS --password-stdin $AWS_REGISTRY
    - ./.maintain/docker-auth-config.sh

    - ./.maintain/build-image.sh build
    - "if [[ ! -z ${CI_COMMIT_BRANCH} ]]; then ./.maintain/push-image.sh build ${CI_COMMIT_SHORT_SHA}; fi"
    - "if [[ ! -z ${CI_COMMIT_BRANCH} ]]; then ./.maintain/push-image.sh build latest-${CI_COMMIT_BRANCH}; fi"
    - "if [[ ! -z ${CI_COMMIT_TAG} ]]; then ./.maintain/push-image.sh build ${CI_COMMIT_TAG}; fi"
    - "if [[ ! -z ${CI_COMMIT_TAG} && ! -z ${CI_COMMIT_TAG##*-rc*} && ! -z ${CI_COMMIT_TAG##*dev-*} ]]; then ./.maintain/push-image.sh build latest; fi"

build-wasm-peregrine:
  image:
    name: paritytech/srtool:1.70.0
    entrypoint: [""]
  stage: build
  only:
    - develop
    - master
    - /^[0-9]+(?:\.[0-9]+){2}(?:-(rc)*([0-9])+)?$/
  script:
    - export PACKAGE=peregrine-runtime
    - export RUNTIME_DIR=runtimes/peregrine
    - export PARACHAIN_PALLET_ID=0x50
    - export AUTHORIZE_UPGRADE_PREFIX=0x02
    - cp -r * /build
    - /srtool/build build
    - subwasm meta --format=json+scale /out/peregrine_runtime.compact.wasm > /out/peregrine-metadata.json
    - mkdir ./out
    - mv /out/* ./out/
  artifacts:
    paths:
      - out/*.wasm
      - out/*.json
    expire_in: 12 week

build-wasm-spiritnet:
  image:
    name: paritytech/srtool:1.70.0
    entrypoint: [""]
  stage: build
  only:
    - develop
    - master
    - /^[0-9]+(?:\.[0-9]+){2}(?:-(rc)*([0-9])+)?$/
  script:
    - export PACKAGE=spiritnet-runtime
    - export RUNTIME_DIR=runtimes/spiritnet
    - export PARACHAIN_PALLET_ID=0x50
    - export AUTHORIZE_UPGRADE_PREFIX=0x02
    - cp -r * /build
    - /srtool/build build
    - subwasm meta --format=json+scale /out/spiritnet_runtime.compact.wasm > /out/spiritnet-metadata.json
    - mkdir ./out
    - mv /out/* ./out/
  artifacts:
    paths:
      - out/*.wasm
      - out/*.json
    expire_in: 12 week
