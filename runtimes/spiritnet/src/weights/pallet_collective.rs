// KILT Blockchain â€“ https://botlabs.org
// Copyright (C) 2019-2023 BOTLabs GmbH

// The KILT Blockchain is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// The KILT Blockchain is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// If you feel like getting in touch with us, you can do so at info@botlabs.org

//! Autogenerated weights for pallet_collective
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-10, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("spiritnet-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/kilt-parachain
// benchmark
// pallet
// --chain=spiritnet-dev
// --steps=50
// --repeat=20
// --pallet=pallet-collective
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./runtimes/spiritnet/src/weights/pallet_collective.rs
// --template=.maintain/runtime-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weights for `pallet_collective`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_collective::WeightInfo for WeightInfo<T> {
	// Storage: TechnicalCommittee Members (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Proposals (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Voting (r:100 w:100)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Prime (r:0 w:1)
	// Proof Skipped: TechnicalCommittee Prime (max_values: Some(1), max_size: None, mode: Measured)
	fn set_members(m: u32, _n: u32, p: u32, ) -> Weight {
		Weight::from_parts(19_571_000 as u64, 0)
			// Standard Error: 47_809
			.saturating_add(Weight::from_parts(5_442_912 as u64, 0).saturating_mul(m as u64))
			// Standard Error: 47_809
			.saturating_add(Weight::from_parts(8_270_610 as u64, 0).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(p as u64)))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(p as u64)))
	}
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	fn execute(b: u32, m: u32, ) -> Weight {
		Weight::from_parts(21_455_250 as u64, 0)
			// Standard Error: 260
			.saturating_add(Weight::from_parts(839 as u64, 0).saturating_mul(b as u64))
			// Standard Error: 2_689
			.saturating_add(Weight::from_parts(7_635 as u64, 0).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
	}
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:1 w:0)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	fn propose_execute(b: u32, _m: u32, ) -> Weight {
		Weight::from_parts(25_565_943 as u64, 0)
			// Standard Error: 289
			.saturating_add(Weight::from_parts(881 as u64, 0).saturating_mul(b as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
	}
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:1 w:1)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Proposals (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalCount (r:1 w:1)
	// Proof Skipped: TechnicalCommittee ProposalCount (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Voting (r:0 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	fn propose_proposed(b: u32, m: u32, p: u32, ) -> Weight {
		Weight::from_parts(28_785_787 as u64, 0)
			// Standard Error: 50
			.saturating_add(Weight::from_parts(2_981 as u64, 0).saturating_mul(b as u64))
			// Standard Error: 531
			.saturating_add(Weight::from_parts(18_747 as u64, 0).saturating_mul(m as u64))
			// Standard Error: 525
			.saturating_add(Weight::from_parts(110_930 as u64, 0).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Voting (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	fn vote(m: u32, ) -> Weight {
		Weight::from_parts(25_582_176 as u64, 0)
			// Standard Error: 250
			.saturating_add(Weight::from_parts(45_093 as u64, 0).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: TechnicalCommittee Voting (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Proposals (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:0 w:1)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	fn close_early_disapproved(m: u32, p: u32, ) -> Weight {
		Weight::from_parts(31_951_147 as u64, 0)
			// Standard Error: 441
			.saturating_add(Weight::from_parts(19_340 as u64, 0).saturating_mul(m as u64))
			// Standard Error: 430
			.saturating_add(Weight::from_parts(101_144 as u64, 0).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: TechnicalCommittee Voting (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:1 w:1)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Proposals (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	fn close_early_approved(b: u32, _m: u32, p: u32, ) -> Weight {
		Weight::from_parts(45_381_860 as u64, 0)
			// Standard Error: 139
			.saturating_add(Weight::from_parts(2_394 as u64, 0).saturating_mul(b as u64))
			// Standard Error: 1_432
			.saturating_add(Weight::from_parts(141_110 as u64, 0).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: TechnicalCommittee Voting (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Prime (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Prime (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Proposals (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:0 w:1)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	fn close_disapproved(m: u32, p: u32, ) -> Weight {
		Weight::from_parts(34_477_728 as u64, 0)
			// Standard Error: 439
			.saturating_add(Weight::from_parts(22_565 as u64, 0).saturating_mul(m as u64))
			// Standard Error: 428
			.saturating_add(Weight::from_parts(101_301 as u64, 0).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: TechnicalCommittee Voting (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Members (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Prime (r:1 w:0)
	// Proof Skipped: TechnicalCommittee Prime (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:1 w:1)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Proposals (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	fn close_approved(b: u32, m: u32, p: u32, ) -> Weight {
		Weight::from_parts(46_992_807 as u64, 0)
			// Standard Error: 91
			.saturating_add(Weight::from_parts(2_611 as u64, 0).saturating_mul(b as u64))
			// Standard Error: 968
			.saturating_add(Weight::from_parts(21_508 as u64, 0).saturating_mul(m as u64))
			// Standard Error: 944
			.saturating_add(Weight::from_parts(136_086 as u64, 0).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: TechnicalCommittee Proposals (r:1 w:1)
	// Proof Skipped: TechnicalCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: TechnicalCommittee Voting (r:0 w:1)
	// Proof Skipped: TechnicalCommittee Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: TechnicalCommittee ProposalOf (r:0 w:1)
	// Proof Skipped: TechnicalCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
	fn disapprove_proposal(p: u32, ) -> Weight {
		Weight::from_parts(20_274_995 as u64, 0)
			// Standard Error: 408
			.saturating_add(Weight::from_parts(94_161 as u64, 0).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
}
