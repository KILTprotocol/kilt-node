
//! Autogenerated weights for `pallet_migration`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-09-14, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `eyrie-7`, CPU: `Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/kilt-parachain
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet-migration
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./runtimes/spiritnet/src/weights/pallet-migration.rs
// --template=.maintain/runtime-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_migration`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_migration::WeightInfo for WeightInfo<T> {
	/// Storage: Migration MigratedKeys (r:1 w:1)
	/// Proof: Migration MigratedKeys (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Attestation Attestations (r:1 w:0)
	/// Proof: Attestation Attestations (max_values: None, max_size: Some(195), added: 2670, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	/// Storage: Balances Holds (r:1 w:1)
	/// Proof: Balances Holds (max_values: None, max_size: Some(949), added: 3424, mode: MaxEncodedLen)
	fn attestation_migration_weight() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `846`
		//  Estimated: `4414`
		// Minimum execution time: 69_050_000 picoseconds.
		Weight::from_parts(70_003_000, 0)
			.saturating_add(Weight::from_parts(0, 4414))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: Migration MigratedKeys (r:1 w:0)
	/// Proof: Migration MigratedKeys (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	fn delegation_migration_weight() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `115`
		//  Estimated: `3513`
		// Minimum execution time: 19_359_000 picoseconds.
		Weight::from_parts(19_697_000, 0)
			.saturating_add(Weight::from_parts(0, 3513))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	/// Storage: Migration MigratedKeys (r:1 w:1)
	/// Proof: Migration MigratedKeys (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2312), added: 4787, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
	/// Storage: Balances Holds (r:1 w:1)
	/// Proof: Balances Holds (max_values: None, max_size: Some(949), added: 3424, mode: MaxEncodedLen)
	fn did_migration_weight() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1002`
		//  Estimated: `5777`
		// Minimum execution time: 71_451_000 picoseconds.
		Weight::from_parts(72_398_000, 0)
			.saturating_add(Weight::from_parts(0, 5777))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: Migration MigratedKeys (r:1 w:0)
	/// Proof: Migration MigratedKeys (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	fn did_lookup_migration_weight() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `78`
		//  Estimated: `3513`
		// Minimum execution time: 17_953_000 picoseconds.
		Weight::from_parts(18_185_000, 0)
			.saturating_add(Weight::from_parts(0, 3513))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	/// Storage: Migration MigratedKeys (r:1 w:0)
	/// Proof: Migration MigratedKeys (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	fn w3n_migration_weight() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `78`
		//  Estimated: `3513`
		// Minimum execution time: 17_962_000 picoseconds.
		Weight::from_parts(18_242_000, 0)
			.saturating_add(Weight::from_parts(0, 3513))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	/// Storage: Migration MigratedKeys (r:1 w:0)
	/// Proof: Migration MigratedKeys (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	fn public_credentials_migration_weight() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `78`
		//  Estimated: `3513`
		// Minimum execution time: 22_277_000 picoseconds.
		Weight::from_parts(22_534_000, 0)
			.saturating_add(Weight::from_parts(0, 3513))
			.saturating_add(T::DbWeight::get().reads(1))
	}
}

#[cfg(test)]
mod tests {
	#[test]
	fn test_attestation_migration_weight() {
		assert!(
			<crate::Runtime as frame_system::Config>::BlockWeights::get()
				.per_class
				.get(frame_support::dispatch::DispatchClass::Normal)
				.max_extrinsic
				.unwrap_or_else(<sp_weights::Weight as sp_runtime::traits::Bounded>::max_value)
				.proof_size()
				> 4414
		);
	}
	#[test]
	fn test_delegation_migration_weight() {
		assert!(
			<crate::Runtime as frame_system::Config>::BlockWeights::get()
				.per_class
				.get(frame_support::dispatch::DispatchClass::Normal)
				.max_extrinsic
				.unwrap_or_else(<sp_weights::Weight as sp_runtime::traits::Bounded>::max_value)
				.proof_size()
				> 3513
		);
	}
	#[test]
	fn test_did_migration_weight() {
		assert!(
			<crate::Runtime as frame_system::Config>::BlockWeights::get()
				.per_class
				.get(frame_support::dispatch::DispatchClass::Normal)
				.max_extrinsic
				.unwrap_or_else(<sp_weights::Weight as sp_runtime::traits::Bounded>::max_value)
				.proof_size()
				> 5777
		);
	}
	#[test]
	fn test_did_lookup_migration_weight() {
		assert!(
			<crate::Runtime as frame_system::Config>::BlockWeights::get()
				.per_class
				.get(frame_support::dispatch::DispatchClass::Normal)
				.max_extrinsic
				.unwrap_or_else(<sp_weights::Weight as sp_runtime::traits::Bounded>::max_value)
				.proof_size()
				> 3513
		);
	}
	#[test]
	fn test_w3n_migration_weight() {
		assert!(
			<crate::Runtime as frame_system::Config>::BlockWeights::get()
				.per_class
				.get(frame_support::dispatch::DispatchClass::Normal)
				.max_extrinsic
				.unwrap_or_else(<sp_weights::Weight as sp_runtime::traits::Bounded>::max_value)
				.proof_size()
				> 3513
		);
	}
	#[test]
	fn test_public_credentials_migration_weight() {
		assert!(
			<crate::Runtime as frame_system::Config>::BlockWeights::get()
				.per_class
				.get(frame_support::dispatch::DispatchClass::Normal)
				.max_extrinsic
				.unwrap_or_else(<sp_weights::Weight as sp_runtime::traits::Bounded>::max_value)
				.proof_size()
				> 3513
		);
	}
}
