
//! Autogenerated weights for runtime_common
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-16
//! STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `rust-2`, CPU: `12th Gen Intel(R) Core(TM) i9-12900K`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./target/debug/kilt-parachain
// benchmark
// pallet
// --pallet
// runtime-common
// --extrinsic
// *
// --template
// ./.maintain/weight-template.hbs
// --output
// ./runtimes/common/src/dip/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for runtime_common.
pub trait WeightInfo {
	fn retrieve_did() -> Weight;
	fn retrieve_w3n() -> Weight;
	fn retrieve_linked_accounts() -> Weight;
	fn proof_generator() -> Weight;
}

/// Weights for runtime_common using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Did::Did` (r:1 w:0)
	/// Proof: `Did::Did` (`max_values`: None, `max_size`: Some(2312), added: 4787, mode: `MaxEncodedLen`)
	/// Storage: `Did::DidBlacklist` (r:1 w:0)
	/// Proof: `Did::DidBlacklist` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	fn retrieve_did() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `352`
		//  Estimated: `5777`
		// Minimum execution time: 85_981 nanoseconds.
		Weight::from_parts(91_423_000, 5777)
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
	/// Storage: `Web3Names::Names` (r:1 w:0)
	/// Proof: `Web3Names::Names` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// Storage: `Web3Names::Owner` (r:1 w:0)
	/// Proof: `Web3Names::Owner` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	fn retrieve_w3n() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `219`
		//  Estimated: `3602`
		// Minimum execution time: 91_613 nanoseconds.
		Weight::from_parts(95_186_000, 3602)
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
	/// Storage: `DidLookup::ConnectedAccounts` (r:2 w:0)
	/// Proof: `DidLookup::ConnectedAccounts` (`max_values`: None, `max_size`: Some(97), added: 2572, mode: `MaxEncodedLen`)
	fn retrieve_linked_accounts() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `241`
		//  Estimated: `6134`
		// Minimum execution time: 93_054 nanoseconds.
		Weight::from_parts(98_463_000, 6134)
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
	fn proof_generator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 84_192 nanoseconds.
		Weight::from_parts(96_118_000, 0)
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `Did::Did` (r:1 w:0)
	/// Proof: `Did::Did` (`max_values`: None, `max_size`: Some(2312), added: 4787, mode: `MaxEncodedLen`)
	/// Storage: `Did::DidBlacklist` (r:1 w:0)
	/// Proof: `Did::DidBlacklist` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	fn retrieve_did() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `352`
		//  Estimated: `5777`
		// Minimum execution time: 85_981 nanoseconds.
		Weight::from_parts(91_423_000, 5777)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
	}
	/// Storage: `Web3Names::Names` (r:1 w:0)
	/// Proof: `Web3Names::Names` (`max_values`: None, `max_size`: Some(81), added: 2556, mode: `MaxEncodedLen`)
	/// Storage: `Web3Names::Owner` (r:1 w:0)
	/// Proof: `Web3Names::Owner` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	fn retrieve_w3n() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `219`
		//  Estimated: `3602`
		// Minimum execution time: 91_613 nanoseconds.
		Weight::from_parts(95_186_000, 3602)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
	}
	/// Storage: `DidLookup::ConnectedAccounts` (r:2 w:0)
	/// Proof: `DidLookup::ConnectedAccounts` (`max_values`: None, `max_size`: Some(97), added: 2572, mode: `MaxEncodedLen`)
	fn retrieve_linked_accounts() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `241`
		//  Estimated: `6134`
		// Minimum execution time: 93_054 nanoseconds.
		Weight::from_parts(98_463_000, 6134)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
	}
	fn proof_generator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 84_192 nanoseconds.
		Weight::from_parts(96_118_000, 0)
	}
}
